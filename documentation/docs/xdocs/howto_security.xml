<?xml version="1.0"?>

<!DOCTYPE document SYSTEM "./dtd/document-v10.dtd">

<document>
  <header>
    <title>Testing secure code Howto</title>
    <authors>
      <person name="Vincent Massol" email="vmassol@apache.org"/>
    </authors>
  </header>

  <body>

    <s1 title="Introduction to testing secure code">

      <p>
        Since version 1.3 Cactus is able to unit test Servlet code that uses
        the Servlet Security API (<code>getRemoteUser()</code>,
        <code>isUserInRole()</code>, <code>getUserPrincipal()</code>).
      </p>
      <p>
        The way to perform this is by securing a Servlet Redirector defined
        in your <code>web.xml</code> and then to specify user credentials
        in your <code>beginXXX()</code>, as defined below.
      </p>

      <note>
        The only currently supported authentication mechanism in Cactus 1.3 is
        the BASIC authentication.
      </note>

      <note>
        The Cactus sample application demonstrates how to unit test everything
        that is explained here.
      </note>

    </s1>

    <s1 title="Step 1 : Passing credentials in beginXXX()">

      <p>
        Let's start with an example :
      </p>

<source><![CDATA[
public void beginBasicAuthentication(WebRequest theRequest)
{
    theRequest.setRedirectorName("ServletRedirectorSecure");
    theRequest.setAuthentication(
        new BasicAuthentication("testuser", "testpwd"));
}

public void testBasicAuthentication()
{
    assertEquals("testuser", request.getUserPrincipal().getName());
    assertEquals("testuser", request.getRemoteUser());
    assertTrue("User not in 'test' role", request.isUserInRole("test"));
}
]]></source>

      <p>

      </p>

    </s1>

  </body>
</document>
