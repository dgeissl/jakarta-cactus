<?xml version="1.0"?>

<!DOCTYPE document SYSTEM "./dtd/document-v10.dtd">

<document>
  <header>
    <title>Getting Started</title>
    <authors>
      <person name="Vincent Massol" email="vmassol@apache.org"/>
    </authors>
  </header>

  <body>

    <s1 title="Installing Cactus">

      <p>
        There is not really an installation of Cactus per see, as Cactus is
        not an application but a framework. However you do need to understand
        how it integrates in your working environment. Thus, installing Cactus
        simply means to understand what jars need to be put where and what are
        the configuration files you need to have and edit. This is discussed
        below.
      </p>
      <p>
        There are 2 kinds of environments in which you may want to use
        Cactus, mainly :
      </p>
      <ul>
        <li>
          within your IDE,
        </li>
        <li>
          from the command line, using
          <link href="http://jakarta.apache.org/ant">Ant</link>
        </li>
      </ul>
      <note>
        Usually, these 2 environments are complementary. A good strategy is
        to use an IDE to increase day to day productivity, run quickly the
        Cactus tests in the IDE and use Ant to perform the
        (continuous) builds (including running the Cactus tests).
      </note>

    </s1>

    <s1 title="System Requirements">

      <p>
        In order to run Cactus tests you need to have the following
        software already installed on your system :
      </p>

      <ul>
        <li>
          <strong>Java Virtual Machine</strong>
          A Java 1.2 or greater compatible virtual machine must be present. Note
          that all servlet engines require a JVM to run so if you are already
          using servlets you already have one installed.
        </li>
        <li>
          <strong>Servlet Engine</strong>
          A Servlet 2.x compliant servlet engine (where x >= 2.2) for running
          your Cactus tests must be present.
        </li>
        <li>
          <strong>Ant (optional)</strong>
          Ant is only needed if you are working from the command line or if you
          wish to automate the execution of tests. If you wish to use Ant,
          make sure that you read the
          <link href="howto_ant.html">Ant Howto</link> after you finish
          reading this introductory guide.
        </li>
      </ul>

    </s1>

    <s1 title="The Cactus files">

      <p>
        At this point, you should have
        <link href="downloads.html">downloaded</link> a Cactus distribution
        (for the J2EE API you intend to use) and unzipped it in a
        <code>[cactus root]</code> directory.
      </p>
      <p>
        The jars making up Cactus can be found in
        <code>[cactus root]/lib</code>. Namely, they are :
      </p>
      <ul>
        <li>
          <strong><code>cactus.jar</code></strong> : the main jar,
          contains the framework classes. You can find this jar in
          <code>[cactus root]/lib</code>.
        </li>
        <li>
          <strong><code>cactus-ant.jar</code></strong> : a jar which
          contains some custom Ant tasks to help integrate easily with Ant.
          This is only needed if you wish to use Ant for automating the
          execution of Cactus tests. For more information on how to integrate
          Cactus with Ant, see the
          <link href="howto_ant.html">Ant Howto</link> tutorial. You also
          find this jar in <code>[cactus root]/lib</code>.
        </li>
        <li>
          <strong><code>httpclient.jar</code></strong> : Cactus is relying
          on the Jakarta Commons HttpClient framework for Cookie handling.
        </li>
        <li>
          <strong><code>junit.jar</code></strong> : Cactus extends JUnit and
          thus needs the JUnit jar.
        </li>
        <li>
          <strong><code>aspectjrt.jar</code></strong> : Cactus uses
          <link href="http://www.aspectj.org">AspectJ</link> for performing
          several tasks (logging entries and exit of methods, checking
          configuration, etc).
        </li>
        <li>
          <strong><code>log4j.jar</code>(optional)</strong> : Cactus uses
          Log4j for performing all internal logging. This jar is optional and if
          you don't put in the classpaths, no logs will be generated.
        </li>
      </ul>
      <p>
        The Cactus configuration files are described in the
        <link href="howto_config.html">Configuration Howto</link> tutorial.
      </p>

    </s1>

    <s1 title="What's next ?">

      <p>
        At this point you should understand what Cactus is and how it works.
      </p>
      <p>
        The next step is to understand how to set up Cactus in your environment.
        For this you'll need to understand <link href="howto_classpath.html">How
        to setup Cactus classpaths</link> and <link href="howto_config.html">How
        to configure Cactus</link>.
      </p>
      <p>
        Then, you should read the <link href="howto_testcase.html">TestCase
        Howto</link> to understand how to write Cactus Test Cases.
      </p>
      <p>
        The last step is probably to put in practice what you've learned so far
        by <link href="howto_sample.html">running the Cactus Samples</link>.
      </p>
      <p>
        Enjoy !
      </p>

    </s1>

  </body>
</document>
