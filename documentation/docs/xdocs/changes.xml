<?xml version="1.0"?>

<document id="changes">

  <properties>
    <title>Changes</title>
    <authors>
      <author name="Vincent Massol" email="vmassol@apache.org"/>
    </authors>
  </properties>

  <body>

    <section title="Summary of changes">
      <ul>
        <li>
          <link href="site:news">News and Events</link>
        </li>
        <li>
          <jump anchor="website_changes">Last 15 days web site changes</jump>
        </li>
        <li>
          <jump anchor="release_changes">Release changes</jump>
        </li>
      </ul>
    </section>

    <!-- ================================================================= -->
    <!-- Last 15 days web site changes -->
    <!-- ================================================================= -->

    <anchor id="website_changes"/>
    <section title="Last 15 days web site changes">

      <p>
        These are the changes that happened to the Cactus web site for the past
        15 days since the last site update (excluding the todo and changes 
        pages which are modified too often):
      </p>

      <!-- Note: The XSL stylesheet will include the CVS changelog here -->
      <cvschangelog/>
      
    </section>

    <!-- ================================================================= -->
    <!-- Release changes -->
    <!-- ================================================================= -->

    <anchor id="release_changes"/>
    <releases title="Release changes">

      <p>
        The changes below are important changes visible to the user. Small
        scale changes that are not externally visible are available from
        the Cactus CVS using the cvs log feature or using the ViewCVS
        interface.
      </p>
      <p>
      	Older release changes are <a href="site:changes_archive">archived</a>.
      </p>

      <devs>
        <person name="Vincent Massol" email="vmassol@apache.org" id="VMA"/>
        <person name="Nicholas Lesiecki" email="ndlesiecki@yahoo.com" id="NDL"/>
        <person name="Christopher Lenz" email="cmlenz@gmx.de" id="CML"/>
        <person name="Julien Ruaux" email="jruaux@apache.org" id="JRU"/>
      </devs>

<!--
Note: To be added once we include the Eclipse plugin in a release

        <action dev="JRU" type="add">
          First release of the Eclipse plugin. See the
          <link href="site:integration_eclipse">Eclipse integration 
          documentation</link> for more information.
        </action>
-->
      <release version="1.6" date="in CVS">
        <action dev="VMA" type="fix">
          Support for WebLogic 7.x is now working fine. Fixed bugs in the 
          WebLogic 7.x configuration: the
          <code>weblogic.xml</code> file was not correctly copied
          in the <code>WEB-INF</code> directory of the cactified
          war, and an NPE happened when the bea home property was not 
          set. It now tries to guess it from the
          <code>cactus.home.weblogic7x</code> property if not set.
          In addition, the configuration has also been greatly simplified.
        </action>
        <action dev="VMA" type="update">
          In the cactifywar Ant task, changed the default realm name
          that is used when adding Cactus default configuration data.
          It was previously <code>Cactus test realm</code>. It is now 
          <code>myrealm</code>. The reason is that the default WebLogic 
          configuration creates a <code>myrealm</code> realm and thus
          using this name makes our Cactus configuration for WebLogic 
          much simpler. It doesn't affect the other containers as they
          do not seem to check for the realm name.
        </action>
        <action dev="VMA" type="add" due-to="Florin Vancea" due-to-email="fvancea@maxiq.ro">
          Added the ability to define the JBoss port that will be used 
          in the Ant integration to poll if the JBoss server is up and
          running. Note: This value will not modify the port of the
          default JBoss configuration (it is still 8080). However, it
          is useful for users who have defined their own JBoss 
          configuration and are using a port other than 8080.
        </action>
      </release>
      	
      <release version="1.5" date="14 July 2003">
        <action dev="VMA" type="update">
          Support for WebLogic 7.x has not been tested with Cactus 1.5 and
          may not work.
        </action>
        <action dev="VMA" type="update">
          Support for WebLogic 6.x is still available in the Ant integration.
          However, it has not been tested as it is no longer possible to
          download WebLogic 6.x from the BEA web site. It is thus completely
          untested.
        </action>
        <action dev="VMA" type="update">
          Update of jars bundled in the Cactus distribution: Commons Logging
          1.0.3, Log4j 1.2.8, HttpClient 2.0beta2, HttpUnit 1.5.3 and 
          JUnit 3.8.1. In addition the requirements for the jars needed to 
          build Cactus were also updated: Checkstyle 3.1 (and the dependent
          jars: BeanUtils 1.6.1, Collections 2.1, Regexp 1.2 and Antlr 2.7.2).
        </action>
        <action dev="VMA" type="add">
          Added a <a href="site:resources_books">Cactus books</a> section
          for books covering the Cactus framework.
        </action>
        <action dev="VMA" type="update">
          Refactoring of <code>XXXTestCase</code> class hierarchy. Whereas 
          it was previously inheriting from <code>AbstractWebTestCase</code>
          and <code>AbstractTestCase</code> it is now simply inheriting
          from JUnit <code>TestCase</code>. Thus all non-public API are now
          not visible from user (as they should be). This has broken binary 
          compatibility. If you had some framework compiled with Cactus 1.4.1
          and using some methods from <code>AbstractWebTestCase</code>
          or <code>AbstractTestCase</code>, you'll need to recompile it 
          with Cactus 1.5.
        </action>
        <action dev="CML" type="add">
          Added a <code>HttpServletRequestWrapper.setRemoteUser()</code> method
          to simulate a remote user. Thus, there is now 2 methods to get a 
          remote user: by simulating it as above or by using real BASIC or 
          Form-based authentication.
        </action>
        <action dev="CML" type="update">
          Refactored the authentication support by introducing the interface
          <code>Authentication</code>, which the class
          <code>AbstractAuthentication</code> now implements.
        </action>
        <action dev="VMA" type="add">
          Added a quick tutorial for Cactus developers who want to 
          <a href="site:integration_eclipse_dev">set up their Eclipse 
          environment</a> to work on the Cactus plugins for Eclipse.
        </action>
        <action dev="CML" type="add">
          The <code>WebResponse</code> class now has a method to directly
          retrieve the status code.
        </action>
        <action dev="VMA" type="fix">
          When a simulation URL is used and null values are passed for the
          Server name, Context Path and Servlet Path parameters, calls to 
          Cactus <code>HttpServletRequestWrapper.getServerName()</code>,
          <code>HttpServletRequestWrapper.getServerPort()</code>,
          <code>HttpServletRequestWrapper.getContextPath()</code> and
          <code>HttpServletRequestWrapper.getServletPath()</code> now correctly
          return the values from the original Request object
          (and not the wrapped one), handled by the Servlet Redirector.
        </action>
        <action dev="VMA" type="update">
          Added verification code in Cactus to verify that the parameters 
          passed to the <code>WebRequest.setURL()</code> method have the
          correct format and throw an exception if not.
        </action>
        <action dev="VMA" type="add">
          Added a <link href="site:news_rdf">RSS feed</link> for Cactus news.
        </action>
        <action dev="CML" type="add">
          The Cactus web site has a new style that is heavily based on CSS.
          It should provide better printing capabilities and a more consistent
          look.
        </action>
        <action dev="VMA" type="fix" fixes-bug="9544" due-to="Misak Boulatian" due-to-email="misak@vantra.com">
          Cactus was not correctly handling the <code>ComparisonFailure</code> 
          exception introduced by JUnit 3.8.1 and these exceptions were 
          reported as errors instead of failures.
        </action>
        <action dev="VMA" type="fix" due-to="Melissa White" due-to-email="mwhite@triactive.com">
          Fixed bug in Cactus exception handling where an invalid test result 
          could result in a <code>StringIndexOutOfBoundsException</code>, thus 
          hiding the real problem.
        </action>
        <action dev="CML" type="add">
          Added a new custom Ant task (WebXmlMerge) that merges the content of
          two web deployment descriptors into one. That includes the
          definitions of filters and servlets, as well as some security-related
          elements.
        </action>
        <action dev="VMA" type="add">
          Allows creating Cactus TestCase without the need for a constructor 
          that takes a String parameter (a default constructor is good enough).
          Obviously, this feature works only with JUnit 3.8.1 (but Cactus
          continues to support JUnit 3.7).
        </action>
        <action dev="VMA" type="add">
          Added ability to add any additional HTTP parameters to the request 
          used by Cactus to the Form-based authentication security URL.
        </action>
        <action dev="VMA" type="add">
          Added support for running pure JUnit TestCase on the server side
          using Cactus. This is possible by using a new 
          <code>ServletTestSuite</code> Test Suite.
        </action>
        <action dev="VMA" type="fix" due-to="Helen Rehn" due-to-email="hrehn@us.ibm.com">
          Fixed bug where a simulation URL would be used even when none has 
          been defined (Reminder: a simulation URL is defined by calling
          <code>WebRequest.setURL()</code>).
        </action>
        <action dev="VMA" type="add">
          Added a timeout for the <code>&lt;runservertests&gt;</code> Ant task
          so that the verification that the container is started is stopped if
          this timeout is reached (a build exception is raised).
        </action>
        <action dev="VMA" type="remove">
          Moved some Ant tasks that were previously in the Cactus Ant tasks;
          they are now in the Ant Integration project. They are the tasks used
          to start/stop the containers and the <code>runservertests</code>
          task. It is now recommended to use the Ant Integration.
        </action>
        <action dev="VMA" type="update">
          Improved (and normalized) build system. This change should not 
          affect nor be visible by Cactus end-users. However, Cactus power
          users building Cactus from sources will appreciate.
        </action>
        <action dev="VMA" type="update">
          Improved test classe names in the Servlet Sample application.
        </action>
        <action dev="VMA" type="update">
          The Servlet Sample build is now using the Cactus Ant Integration.
        </action>
        <action dev="CML" type="add">
          New Cactus Ant Integration. It provides new custom Ant tasks
          such as 
          <code>&lt;cactifywar&gt;</code>, <code>&lt;cactus&gt;</code>
          which makes executing Cactus tests from an Ant build script
          extremely easy.
        </action>
        <action dev="VMA" type="update">
          Modified the build process to generate the Cactus web site by 
          removing the use of Stylebook and replacing it with an XSL
          stylesheet. In addition, added several new features: support for
          subdirectories, support for dynamic menu items and sitemap 
          generation.
        </action>
        <action dev="VMA" type="fix">
          The Cactus <code>runservertests</code> custom Ant task has been
          improved and it is now propagating correctly Ant references to the
          targets you defined for starting the container, stopping it and 
          runnning the Cactus tests. Previously, it was only propagating
          the Ant properties.
        </action>
        <action dev="CML" type="update">
          Added stack trace filtering to the ServletTestRunner. Stack frames
          in the JUnit framework classes as well as in the Cactus base test 
          case classes are filtered out.
        </action>
        <action dev="VMA" type="add">
          The Cactus web site now provides online documentation for both the
          CVS HEAD version and the last released version.
        </action>
        <action dev="CML" type="fix">
          Enable the <code>ServletTestRunner</code> to run in an environment 
          where it is not allowed to set system properties. In such cases, the
          <code>cactus.properties</code> configuration file needs to be on the 
          server classpath.
        </action>
        <action dev="CML" type="update">
          Implemented server-side XSLT transformations in the
          <code>ServletTestRunner</code>. The code is based on the TraX API but
          uses reflection to avoid a direct runtime dependancy.
        </action>
        <action dev="VMA" type="add">
          Added automated Ant scripts for JBoss/Jetty 3.x.
        </action>
        <action dev="CML" type="fix">
          Fixed bug where users using a Locale which does not format numbers
          with dots (".") had issues with the JUnitReport Ant XSL stylesheet.
          The Servlet Test Runner code now forces a US Locale.
        </action>
        <action dev="VMA" type="add" due-to="Christopher Lenz" due-to-email="cmlenz@gmx.de">
          Added new extension class to help unit test JSP Taglibs. See the
          <code>TestJspTagLifecycle</code> test class in the sample-servlet
          application for help on using it.
        </action>
        <action dev="VMA" type="update">
          Improved error handling when dealing with invalid Cookies.
        </action>
        <action dev="VMA" type="fix" due-to="Roumen B. Antonov" due-to-email="rantonov@fourthgen.com">
          Fixed a potential bug with classloaders. On the server side, Cactus 
          looks for the TestCase class by searching first the WebApp 
          Classloader and then the Context ClassLoader. However, the Context 
          ClassLoader is only searched if an Exception (subclass of 
          <code>Exception</code>) is raised. Thus, if a 
          <code>NoClassDefFoundError</code> had been raised, Cactus would 
          not have searched in the Context ClassLoader.
        </action>
        <action dev="VMA" type="add" due-to="Atsushi Hasegawa" due-to-email="ahasegawa@borland.com">
          Added support for internationalization (double byte characters) for 
          sending back test results. This allows Cactus to be used with any
          character set.
        </action>
        <action dev="VMA" type="fix" due-to="Pranab Dhar" due-to-email="Pranab.Dhar@dfa.state.ny.us">
          Fixed bug where a redirector overriden by calling 
          <code>WebRequest.setRedirectorName()</code> was not used to fetch the
          Cactus test result (the default redirector specified in the Cactus
          configuration was used instead).
        </action>
        <action dev="VMA" type="fix" due-to="Stephan Merker" due-to-email="Stephan.Merker@cegedim.fr">
          Fixed bug where Cactus was using the deprecated HttpClient 
          <code>PostMethod.setRequestBody(String)</code> which had some bug
          related to char to byte encoding. Now using the
          <code>PostMethod.setRequestBody(InputStream)</code> signature.
        </action>
        <action dev="VMA" type="add">
          Added links to Japanese and Korean translations of Cactus.
        </action>
        <action dev="VMA" type="add">
          Ability to get a real HTTP Session cookie before the start of the 
          test. This is achieved by calling the new
          <code>WebRequest.getSessionCookie()</code> method which returns
          a <code>HttpSessionCookie</code> object that you then add to the
          HTTP request. Initially suggested by
          <link href="mailto:kyle.w.willkomm@accenture.com">Kyle W.
          Willkomm</link>.
        </action>
        <action dev="VMA" type="add">
          New <code>WebResponse.getCookieIgnoreCase(cookieName)</code> to get
          the first cookie matching <code>cookieName</code> whatever the case
          (case-insensitive).
        </action>
        <action dev="VMA" type="add" due-to="Jason Robertson" due-to-email="Jason.Robertson@acs-inc.com">
          Added Form-based authentication support.
        </action>
        <action dev="VMA" type="add">
          Added a <link href="site:howto_build">tutorial</link> that explains 
          how to build Cactus from the sources.
        </action>
        <action dev="VMA" type="add">
          Added a Jetty Sample application to demonstrate how to use the new
          <code>JettyTestSetup</code> that automatically starts Jetty before
          a test suite.
        </action>
        <action dev="JRU" type="add">
          Added a <link href="site:integration_jetty">Jetty integration 
          tutorial</link>.
        </action>
        <action dev="VMA" type="add">
          Added a <code>org.apache.cactus.extension.jetty.JettyTestSetup</code>
          JUnit TestSetup to automatically start Jetty before a test suite
          is executed. This is really nice to quickly run tests inside any 
          IDE or even from a simple <code>&lt;junit&gt;</code> Ant taks without 
          the need to package and deploy a WAR. In addition, it is real nice to 
          debug tests this way. Moreover, Jetty starts in less than 1 second, 
          making it completely seamless and transparent! We are now at the same
          order of magnitude as pure JUnit tests in term of speed ... :-). Of 
          course, this is only for Servlet tests ... I am still waiting for an
          embeddable EJB container that starts in less than 1 second ...
        </action>
        <action dev="VMA" type="add">
          Added support for client side <code>begin(...)</code>
          and <code>end(...)</code> methods. They are called on the
          client side, before and after every test in the same way as the
          JUnit <code>setUp()</code> and <code>tearDown()</code> are called
          before and after each test, but on the server side.
        </action>
      </release>

    <release version="1.4.1" date="31 August 2002">
      <action dev="VMA" type="add" due-to="Hirsch Richard" due-to-email="richard.hirsch@siemens.com">
        Added a sample (and thus a test for Cactus) for HttpUnit integration
        as part of the Cactus sample.
      </action>
      <action dev="VMA" type="fix" due-to="Hirsch Richard" due-to-email="richard.hirsch@siemens.com">
        Fixed bug in new HttpClient wrapper in Cactus with regards to the 
        headers returned in the HTTP response (they were offset by one and
        the status line was not returned as a header).
      </action>
      <action dev="VMA" type="fix" due-to="Micah Williams" due-to-email="backOffice@thirdmillenniumvisions.com">
        Fixed bug where <code>NullPointerException</code> would be thrown by Cactus
        <code>ServletTestRunner</code> if an exception raised in a test case had not
        specified a message (i.e. <code>getMessage()</code> returning 
        <code>null</code>).
      </action>
      <action dev="VMA" type="fix" due-to="Gerhard Kreutzer" due-to-email="g.kreutzer@kreutzersoft.de">
        Some JDK implementation return "null" when Class.getClassLoader() is 
        called to indicate that the given class has been loaded by the 
        bootstrap class loader. This was leading to 
        <code>NullPointerException</code> being thrown by Cactus in some
        cases.
      </action>
      <action dev="VMA" type="fix" due-to="Ville Skyttä" due-to-email="ville.skytta@iki.fi">
        Fixed import bug in sample-servlet which prevented building Cactus
        from the sources on JDK 1.4.
      </action>
      <action dev="VMA" type="fix" due-to="Hirsch Richard" due-to-email="richard.hirsch@siemens.com">
        Fixed default properties for the sample application so that it points 
        to the correct HttpClient jar which is packaged with Cactus (the one 
        built on 06/06/2002).
      </action>
      <action dev="VMA" type="fix" due-to="Larry Tambascio" due-to-email="ltambascio@charter.net">
        Fixed a bug that was preventing having several POST parameters added in 
        the request in <code>beginXXX()</code> methods.
      </action>
      <action dev="VMA" type="fix" due-to="Dave Hoover" due-to-email="dave@redsquirrel.com">
        The encoding in the sample <code>junit-noframes</code> XSL 
        stylesheet was set to be "US-ASCII". It is now set to "UTF-8". 
        Apparently, XSLT processors are only required to support utf-8 
        and utf-16, the rest is processor specific. For example your 
        processor might support US-ASCII-7 and others might support 
        US-ASCII. Thanks to Robert Koberg for the explanation!
      </action>
    </release>
	
    <release version="1.4" date="25 August 2002">
      <action dev="VMA" type="add">
        Added a <link href="site:howto_jsp">tutorial</link> that explains how
        to test JSPs with Cactus.
      </action>
      <action dev="VMA" type="fix" due-to="David George" due-to-email="david.off@voila.fr">
        Fixed JDK 1.2 compatibility (broken in 1.4b1).
      </action>
      <action dev="VMA" type="fix" due-to="Felipe Hoffa" due-to-email="felipehoffa@yahoo.com">
		According to the XML definitions (at least the definitions Mozilla 1.0
		got implemented), the &lt;?xml version...&gt; tag should go before the 
		&lt;?xml-stylesheet...&gt; tag. Using them in the wrong order produces 
		an error when Mozilla tries to render it.
	  </action>
    </release>

    <release version="1.4b1" date="July 31 2002">
      <action dev="VMA" type="add">
        It is now possible to assert response codes in
        <code>endXXX()</code>. For example, you can verify that you servlet
        has returned a 500 response code. See the tests provided in the Sample
        Servlet application which is part of the Cactus distribution. This
        change was possible because we moved the underlying implementation from
        <code>HttpURLConnection</code> to Jakarta
        <link href="ext:commons_httpclient">Commons HttpClient</link>. Note:
        It is still not possible to test a 401 response code (this limitation 
        has been raised to the HttpClient team).
      </action>
      <action dev="VMA" type="update">
        Refactored internal code to be able to use different HTTP connection
        implementation. 2 are currently provided: one using the JDK
        <code>HttpURLConnection</code> and one using Jakarta
        <link href="ext:commons_httpclient">Commons HttpClient</link> (the 
        default one). It can be modified by setting the following System
        property: <code>cactus.connectionHelper.classname =
        org.apache.cactus.client.JdkConnectionHelper</code> (for the JDK
        <code>HttpURLConnection</code>). Note that the Servlet Sample test
        that assert response code will fail with the JDK
        <code>HttpURLConnection</code> implementation.
      </action>
      <action dev="VMA" type="add">
        Cactus now requires the Commons Logging library
        (<code>commons-logging.jar</code>). It is needed as Commons HttpClient
        is now using Commons Logging for logging and Cactus depends on
        HttpClient. Cactus is also now using Commons HttpClient for all its
        internal logs. This lets us use any underlying logging implementation:
        Log4j, LogKit, JDK 1.4 Logging, No Logging or SimpleLog (provided with
        Commons Logging - logs to the console). Check the
        <link href="site:howto_config">Config Howto</link> for how
        to configure logging in Cactus.
      </action>
      <action dev="VMA" type="remove">
        Removed deprecated <code>org.apache.cactus.ServletTestRequest</code>
        class (was deprecated in Cactus 1.2).
      </action>
      <action dev="VMA" type="remove">
        Removed deprecated <code>org.apache.cactus.util.ClientCookie</code>
        class (was deprecated in Cactus 1.2).
      </action>
      <action dev="VMA" type="remove">
        Removed deprecated <code>org.apache.cactus.util.AssertUtils</code>
        class (was deprecated in Cactus 1.2).
      </action>
      <action dev="VMA" type="add">
        Added automatic script support for Orion 1.6.
      </action>
      <action dev="VMA" type="fix">
        Ant scripts for Resin, Orion, Tomcat 3.2.4, WebLogic 6.1 and WebLogic
        7.0 now correctly configured for Cactus BASIC authentication tests.
      </action>
      <action dev="VMA" type="add">
        Added automatic script support for WebLogic 7.0.
      </action>
      <action dev="VMA" type="fix" fixes-bug="9544" due-to="Daniel Dennison" due-to-email="dennison@mitec.net">
         It seems that it is possible that the test result contain an end of 
         line character and the Cactus <code>WebTestResultParser</code> was 
         choking on this and seeing the returned result as invalid. This has 
         been fixed.
      </action>
      <action dev="VMA" type="add">
        Added Test Coverage Reports as part of the Web Site generation.
      </action>
      <action dev="VMA" type="update">
        Renamed all external jars used in Cactus by suffixing them with their
        versions. This is so that Cactus users will know exactly what jars
        Cactus is packaging. You are of course free to use your own jars and
        Cactus only packages these jars for your convenience. Cactus nows
        packages Log4j 1.2.3, AspectJ Runtime 1.0.4, JUnit 3.7,
        HttpClient 2.0alpha1 built on 6/6/2002, HttpUnit 1.4 and (new) the
        Servlet API 2.2 and 2.3 jars. The Cactus jars have also been renamed
        to include the version number in their names.
      </action>
      <action dev="VMA" type="fix">
        Cactus Sample can be built using Ant 1.4 (support for Ant 1.4 was
        broken by a line introduced in Cactus 1.3 that would only work with
        Ant 1.5. However, this line can easily be commented out).
      </action>
      <action dev="VMA" type="fix" fixes-bug="8640" due-to="Marc Brette" due-to-email="Marc.Brette@mkms.xerox.com">
         (It also solves bug
         <link href="http://nagoya.apache.org/bugzilla/show_bug.cgi?id=8640">
         Bug #4167</link> reported by
         <link href="mailto:eqwalker@yahoo.com">Eric Walker</link>).
         Modified the <code>jspRedirector.jsp</code> so that
         it initializes an HTTP Session (<code>session="true"</code>). There
         is no way I know to make this parameter dynamic so we set it to true
         as this is the most used case. If one of your test must not have a
         session created for it, then you can always use the Redirector
         overriding feature (<code>WebRequest.setRedirectorName(String
         redirectorName)</code>).
      </action>
      <action dev="VMA" type="fix" due-to="Patrick Lightbody" due-to-email="plightbo@hotmail.com">
        Fixed bug where the Test Result object which is put in the Servlet
        Context was not serializable. This might cause some trouble with some
        containers.
      </action>
      <action dev="VMA" type="add" due-to="Marc Brette" due-to-email="Marc.Brette@mkms.xerox.com">
        Added simulation of Remote IP address and Remote Host Name, i.e. you
        can now control what <code>request.getRemoteAddr()</code> and
        <code>request.getRemoteHost()</code> will return. That is useful if
        your code depends on these values.
      </action>
      <action dev="VMA" type="update">
        It is now possible to specify the Cactus properties as System
        properties (the property names are the same as the ones in
        <code>cactus.properties</code>). Also if not specified, redirector
        names are set by default to "ServletRedirector", "JspRedirector" and
        "FilterRedirector".
      </action>
      <action dev="VMA" type="add">
        New <link href="site:howto_tomcat">Quick start tutorial</link> that
        explains how to run Cactus tests quickly in Tomcat.
      </action>
      <action dev="VMA" type="add">
        A cool new way to quickly execute your test cases: Cactus now has
        a JUnit Test Runner called ServletTestRunner (it is a servlet) that
        you start using your browser. See the
        <link href="site:howto_runner">TestRunner Howto</link> tutorial.
      </action>
      <action dev="VMA" type="fix">
        Test classes are now first looked for using the Current classloader
        (the webapp one for Servlets) and if not found using the context
        class loader. Previously the order was the revert, which was not
        logical and could lead to issues.
      </action>
      <action dev="VMA" type="update">
        Improved debugging of <code>runservertests</code> task. Simply run
        Ant in debug mode (<code>ant -debug xxx</code>) and the task will
        print information. Very useful to know why the
        <code>runservertests</code> task seems to hang after starting your
        server ...
      </action>
    </release>

  </releases>

  </body>

</document>