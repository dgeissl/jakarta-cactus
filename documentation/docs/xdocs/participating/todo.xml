<?xml version="1.0"?>

<document id="todo">

  <properties>
    <title>Roadmap/Todo for Cactus</title>
    <authors>
      <author name="Vincent Massol" email="vmassol@apache.org"/>
    </authors>
  </properties>

  <body>

    <section title="Forewords">
      <p>
        As is stated on the Cactus <link href="site:goals">goals</link> page, 
        the intention is to explore as much as possible in the realm of unit 
        testing of server side java code ...
      </p>
      <p>
        This brings a bad news and a good one ... The
        bad one is that the TODO list is likely to keep growing or at least
        have a respectable size ... The good one
        is that there will be work for everyone ... :-)
      </p>
      <p>
        If you are interested in participating, send an email on the Cactus 
        mailing list stating your interest and you'll be enrolled right 
        away ... We're always looking for help ! Don't be put off if in the 
        "Volunteer" column there is already a person listed. On the contrary, 
        the more person that participate in a given task, the better (like in 
        pair programming, several sets of eyes are always better than one!). 
        However you'll need to sync. with these others persons but this is 
        easily done by posting to the mailing-list.
      </p>
      <p>
        The game has just begun ... !
      </p>
    </section>

  <version title="Version 1.5">

    <category title="Documentation">
    </category>

    <category title="Build process">
      <action>
        Fix the Jetty build to be at the same quality standard
        as the other builds.
      </action>
      <action>
        Add a Gump definition for building the Eclipse Site project
        and only released an installed Eclipse update web site (no
        zips). Same as what is on 
        http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/org.eclipse.ajdt/download.html.
      </action>
    </category>

    <category title="Design/Code">
      <action>
        Modify the Eclipse plugin to use the new Ant integration.
      </action>
      <action assigned-to="Christopher Lenz">
        Resolve remaining backwards compatibility problems. One is the move of
        classes from the <code>o.a.c.server</code> package to the
        <code>o.a.c.server.wrapper</code>, which seems to break
        <link href="ext:strutstestcase">StrutsTestCase</link>. Another is the
        move of the <code>AbstractServerRun</code> based classes in the Ant
        integration, which might be directly used in some user build files.
      </action>
    </category>
    
  </version>

  <version title="Undefined">

    <category title="Documentation">
      <action assigned-to="Jason Robertson, Vincent Massol">
        Add documentation for form-based authentication.
      </action>
      <action>
        Improve the documentation CheckSitemap Ant task to check external URLs
        (when online).
      </action>
    </category>

    <category title="Build Process">
      <action assigned-to="Jason Van Zyl">
        Move Cactus to Maven.
      </action>
      <action>
        Add support in Ant Integration for JBoss/Tomcat (JBoss/Jetty is 
        supported).
      </action>
      <action>
        Add support in Ant Integration for the J2EE RI.
      </action>
    </category>
    
    <category title="Design/Code">
      <action assigned-to="Hudson Wong, Vincent Massol">
        Add an EJB sample application to demonstrate how to perform EJB
        unit testing.
      </action>
      <action assigned-to="Jason Robertson, Vincent Massol">
        Add test case for form-based authentication.
      </action>
      <action assigned-to="Christopher Lenz">
        Improve the ServletTestRunner: look at ways to make it run without the
        permission to set system properties.
        Potentially look at replacing it by the JUnitEE test runner.
      </action>
      <action>
        Continue the JMS Redirector/Client to test Message Driven Beans.
      </action>
      <action>
        Add support for Servlet API 2.4/JSP 2.0 (by using Resin 3, Tomcat 5).
      </action>
      <action>
        Potentially replace access to instance variables of redirectors by 
        method calls. For example, replace "request.xxx()" by 
        "getHttpServletRequest().xxx()". Deprecate the direct access. Needs
        to be discussed on cactus-dev.
      </action>
      <action>
        Add support for multi-concurrent Cactus tests. This involves storing
        each test result under a unique key in the application scope.
      </action>
      <action>
        Improve support for the JUnitReport XML format so that the Ant-provided
        <code>junit-noframes.xsl</code> XSL is completely supported. ATM, some
        sections appear blank.
      </action>
      <action>
        Add EJB Redirectors so that unit testing of code that require an EJB
        is facilitated. For example, let's imagine you need to test that an
        object that has been put in the JNDI tree by a servlet can be retrieved
        by an EJB. These are not unit tests per see but rather integration
        tests, which is Cactus favorite domain. Also these redirectors could be
        used to directly unit tests EJB whithout requiring a servlet
        environment (at the current time, you need to call your EJB from a
        Servlet/JSP/Filter Redirector, which is fine for certain tests but not
        needed for others.
      </action>
    </category>

    <category title="Ideas">
      <p>
        Ideas to explore ...
      </p>
      <action>
      	Potential bundling of JUnitEE.
      </action>
      <action>
        Add performance extensions to be able to test each single method in
        performance: response time. Need to add notion of server time in
        cactus XML response. And need extensions (probably TestSuite 
        extensions to repeat each test or start several threads). Idea 
        initially suggested by
        <link href="mailto:rimovm@centercomp.com">Michael Rimov</link>.
        Integrate JUnitPerf.
      </action>
      <action>
        Use <link href="http://xdoclet.sourceforge.net/docs/">XDoclet</link>
        with Cactus to better provide continuous integration. It could be
        used to automatically generate <code>web.xml</code> files,
        automatically generating test cases from methods to test, ...
      </action>
      <action>
        Add tutorial on Cactus and AOP unit testing (using AspectWerkz
        for example). Also research adding a Cactus Aspect extension to allow 
        writing test cases as Aspects (this would allow to
        remove the need for Cactus redirectors in most cases).
      </action>
      <action>
        Help Cactus users test multipart/form-data. At least explain how to do
        it. Some idea: use cos.jar (from
        <link href="http://www.servlets.com/cos/index.html">http://www.servlets.com/cos/index.html</link>)
        to read multipart/form-data on the server side. Now we still need to
        provide a mechanism to easily send multipart/form-data on the Cactus
        client side. The best solution would be to use HttpClient but we need
        to check if it has this feature or if it can be added. Submitted by
        <link href="mailto:Gunnar.Skogen@ergo.no">Gunnar Ole Skogen</link>.
      </action>
      <action>
        Provide a full servlet container test suite a la Watchdog using Cactus
      </action>
    </category>

    <category title="Eclipse Plugin">
      <action>
        Ability to leave the server running after the test is finished so
        that we don't need to start it again for the next test (needs hot
        redeploy)
      </action>
      <action>
        Separate the container start/stop/deploy feature in a separate plugin
      </action>
      <action>
        Automate tests on the plugin
      </action>
      <action>
        "cactify" should check if the jars it adds are already in the project
        build path before adding them
      </action>
    </category>

  </version>

  </body>
  
</document>