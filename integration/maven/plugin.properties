# -------------------------------------------------------------------
# Default properties for the Cactus Plugin
# -------------------------------------------------------------------

# Location of containers. These properties need to be put in your
# local project.properties as they depend on where you installed
# your containers on your local machine.
#
# Examples:
#
#cactus.home.tomcat4x = c:/apps/tomcat-4.1.30
#
# Supported container names: jboss3x, tomcat4x, resin2x, resin3x, orion1x,
cargo.containers = resin2x,resin3x,tomcat3x,tomcat4x,tomcat5x,orion1x,orion2x,jboss3x,weblogic7x

# Location of Cactus tests in project sources
cactus.src.dir = ${basedir}/src/test-cactus

# Default Cactus test files to include in the test
cactus.test.includes = **/*Test*.class

# Default Cactus test files to exclude from the test
cactus.test.excludes = **/All*Test*.class,**/Test*All.class

# (optional). Location of a test-specific web.xml file that will be
# merged with the application web.xml, during the War cactification. 
# Note that by default the cactification already adds the Cactus
# redirector definitions.
#cactus.src.mergewebxml = ${basedir}/src/conf/cactus-web.xml

# Default port on which to start the containers
# Notice that on some containers (like JBoss) it's also necessary to change 
# the configuration on the container itself, not only on this property
cactus.port = 8080

# Decides whether the test result will be printed to the console or
# not. Default is false
cactus.junit.usefile = false

# Location of junit test reports for the Cactus tests
cactus.reports.dir = ${maven.build.dir}/test-cactus-reports

# Shall we stop the build in case of test failures?
cactus.halt.on.failure = true

# Shall we stop the build in case of test errors?
cactus.halt.on.error = true

# How summary information on test should be printed (see the
# "printsummary" attribute of the JUnit Ant task.
cactus.printsummary = withOutAndErr

# Should Cactus tests be run whenever cactus:report is called (e.g. when
# the web site is generated). Default to true. If you wish to optimize build
# speed, you can turn this off.
cactus.execute.during.report = true

# Goal that Cactus should call for generating the war artifact
cactus.build.goal.war = war:war

# Location of war to cactify. By default it points to the war generated by the
# execution of "maven war:war".
# The cactus.src.war property is defined in the plugin.jelly script.

# Location of the EJB to test (for the test-ear goal only). By default it 
# points to the EJB generated by the execution of "maven ejb:ejb".
# The cactus.src.ejb property is defined in the plugin.jelly script.

# Goal that Cactus should call for generating the ejb artifact
cactus.build.goal.ejb = ejb:ejb

# J2EE version for the generated appxml descriptor (needed only when testing 
# EJBs with Cactus)
cactus.j2ee.version = 1.3

# Decides whether to use ear deployment when executing the cactus:test target 
# or not. Defaults to false.
cactus.is.ear = false

# (optional) Temporary directory where the containers are setup/executed
#cactus.tmp.dir = 

# Location where to generate the cactified WAR. Note that this is also the 
# name of the test context that will be used (except if the context is 
# specified by other means such as in application.xml if the WAR is packaged 
# in an EAR, etc).
cactus.war = ${maven.build.dir}/${pom.artifactId}-cactus.war

# Location where to generate the cactified EAR.
cactus.ear = ${maven.build.dir}/${pom.artifactId}-cactus.ear

# Decide if we should run the tests or not
cactus.test.skip=${maven.test.skip}

# (optional) Location of client and server logging properties file to debug
# Cactus tests.
# cactus.logging.config.client = ${basedir}/logging_client.properties
# cactus.logging.config.server = ${basedir}/logging_server.properties

# Use this property elements to specify system properties required
# by the test class. These properties will be made available to the 
# Cactus client side and server side JVMs during the execution of 
# the test. You can specify several system properties by listing 
# their names, separating them with spaces. Each property value is
# defined as a separate Maven property.
# For example:
#   cactus.sysproperties=prop1 basedir
#   prop1=your value
#   basedir=${basedir}

# (optional). Comma-separated list of resources labels to include in the war 
# classpath
#cactus.resources.dirs=xxx,yyy

# (optional). Label directory to include in the war classpath
#cactus.resources.xxx.dir=${basedir}/src/main/resources_xxx
#cactus.resources.yyy.dir=${basedir}/src/main/resources_yyy

# (optional). Comma-separated list of expressions (one for each label) of 
# files to be included in the war classpath
#cactus.resources.xxx.includes=**.xml,**.dtd
#cactus.resources.yyy.includes=**.properties

# (optional). Comma-separated list of expressions (one for each label) of 
# files to be excluded in the war classpath
#cactus.resources.xxx.excludes=
#cactus.resources.yyy.excludes=


# Servlet version for the generated cactus war file
cactus.servlet.version = 2.3

# -------------------------------------------------------------------
# Container-related properties
# -------------------------------------------------------------------

## Generic properties - each container will have an equivalent property, which
## by default points to the generic value

# Arguments to be passed to the container's JVM
#cactus.genericContainer.jvmArgs

## Container-specific properties
 
# Name of the JBoss server configuration to use.
cactus.jboss3x.config.name = default

# Default tmp directory where the JBoss server configuration for Cactus
# will be created.
cactus.jboss3x.tmp.dir = ${cactus.home.jboss3x}/server/cactus

# (optional) Location of a custom user-specified server configuration which
# will be copied to cactus.jboss3x.tmp.dir if specified.
# Ex: cactus.jboss3x.config.dir = target/jboss-cactus

# Name of the JNDI port on which JBoss is started. This is only used
# to shutdown JBoss.
# Notice that it is not enough to change this value - it must match what is 
# defined on JBoss configuration files
cactus.jboss3x.jndiport = 1099

# Arguments to be passed to the container's JVM
cactus.jboss3x.jvmArgs=${cactus.genericContainer.jvmArgs}

# (optional). Resin 2.x configuration file if you don't want to use the 
# cactus-provided one
#cactus.resin2x.config = 

# Arguments to be passed to the container's JVM
cactus.resin2x.jvmArgs=${cactus.genericContainer.jvmArgs}

# (optional). Resin 3.x configuration file if you don't want to use the 
# cactus-provided one
#cactus.resin3x.config = 

# Arguments to be passed to the container's JVM
cactus.resin3x.jvmArgs=${cactus.genericContainer.jvmArgs}

# Arguments to be passed to the container's JVM
cactus.orion1x.jvmArgs=${cactus.genericContainer.jvmArgs}

# Arguments to be passed to the container's JVM
cactus.orion2x.jvmArgs=${cactus.genericContainer.jvmArgs}

# (optional). Tomcat 4.x configuration file if you don't want to use the 
# cactus-provided one
#cactus.tomcat4x.config = 

# (optional). List of custom Tomcat 4.x configuration files that will be 
# included/excluded in the Tomcat conf/ directory (will overwrite the 
# default cactus-provided conf files).
#cactus.tomcat4x.conf.dir = 
#cactus.tomcat4x.conf.includes = 
#cactus.tomcat4x.conf.excludes =

# (optional). Tomcat 4.x directory to which the container will be installed 
# for the tests. By default the system temporary directory is used
#cactus.tomcat4x.tmpdir = 

# Arguments to be passed to the container's JVM
cactus.tomcat4x.jvmArgs=${cactus.genericContainer.jvmArgs}

# (optional). Tomcat 5.x configuration file if you don't want to use the 
# cactus-provided one
#cactus.tomcat5x.config = 

# (optional). List of custom Tomcat 5.x configuration files that will be 
# included/excluded in the Tomcat conf/ directory (will overwrite the 
# default cactus-provided conf files).
#cactus.tomcat5x.conf.dir = 
#cactus.tomcat5x.conf.includes = 
#cactus.tomcat5x.conf.excludes =

# (optional). Tomcat 5.x directory to which the container will be installed
# for the tests. By default the system temporary directory is used
#cactus.tomcat5x.tmpdir = 

# Arguments to be passed to the container's JVM
cactus.tomcat5x.jvmArgs=${cactus.genericContainer.jvmArgs}

# (optional). Location of BEA HOME. If not specified it defaults to
# the parent directory of cactus.home.weblogic7x
#cactus.weblogic7x.beahome =

# (optional). WebLogic 7.x configuration file if you don't want to use the 
# cactus-provided one
#cactus.weblogic7x.config = 

# Arguments to be passed to the container's JVM
cactus.weblogic7x.jvmArgs=${cactus.genericContainer.jvmArgs}
