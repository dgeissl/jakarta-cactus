<?xml version="1.0"?>
<!DOCTYPE project [
    <!ENTITY common SYSTEM "file:../../build-common.xml">
]>

<!--
  =============================================================================
    Build file for the Cactus Ant Integration project.

    See build.properties.sample for mandatory and optional Ant properties that
    need to be set prior to calling this build script.

    This script should be started with the following command line :

        ant <target>

    Run "ant -projecthelp" to get a list of available targets.

    Note: basedir points to the main Cactus directory in order to have the same
          base dir for all Cactus subprojects and thus be able to share
          relative paths.
  =============================================================================
-->
<project name="Cactus Ant Integration" default="dist" basedir="../..">

    <!-- Base directory for all file related operations -->
    <property name="base.dir" value="integration/ant"/>

    <!-- Include properties and targets common to the different subprojects -->
    &common;

    <!-- Global project properties -->
    <property name="project.name.text" value="Cactus Ant Integration"/>
    <property name="project.name.file" value="cactus-integration-ant"/>

    <!--
       ========================================================================
         Initialize source, target and dist properties
       ========================================================================
    -->
    <target name="properties">

        <!-- Set the properties related to the source tree -->
	    <property name="src.dir" value="${base.dir}/src"/>
	    <property name="src.java.dir" value="${src.dir}/java"/>
	    <property name="src.script.dir" value="${src.dir}/scripts"/>
	    <property name="src.conf.dir" value="${src.dir}/confs"/>
	    <property name="build.dir" value="${base.dir}/."/>

        <!-- Set the properties related to the target area -->
	    <property name="target.classes.dir" value="${target.dir}/classes"/>
	    <property name="target.classes.java.dir"
	        value="${target.classes.dir}/java"/>
	    <property name="target.doc.dir" value="${target.dir}/doc"/>
	    <property name="target.doc.api.dir" value="${target.doc.dir}/api"/>

        <property name="target.integration.dir" value="${target.dir}/integration"/>
        <property name="target.integration.lib.dir" 
            value="${target.integration.dir}/lib"/>
	    <property name="target.integration.lib.client.dir" 
	        value="${target.integration.lib.dir}/client"/>
	    <property name="target.integration.lib.server.dir"
	        value="${target.integration.lib.dir}/server"/>
	    <property name="target.integration.lib.common.dir"
	        value="${target.integration.lib.dir}/common"/>
	    <property name="target.integration.script.dir" 
	        value="${target.integration.dir}/scripts"/>
	    <property name="target.integration.conf.dir" 
	        value="${target.integration.dir}/confs"/>

    </target>

    <!--
       ========================================================================
         Verify that all mandatory properties have been set
       ========================================================================
    -->
    <target name="check.properties">

        <taskdef name="checkProperty" 
            classname="org.apache.cactus.ant.CheckPropertiesTask">
            <classpath>
                <pathelement location="${cactus.anttasks.jar}"/>
            </classpath>
        </taskdef>

        <checkProperty>
            <property name="j2ee.jar" isfile="true"/>
            <property name="aspectjrt.jar" isfile="true"/>
            <property name="commons.logging.jar" isfile="true"/>
            <property name="commons.httpclient.jar" isfile="true"/>
            <property name="junit.jar" isfile="true"/>
            <property name="httpunit.jar" isfile="true"/>
            <property name="log4j.jar" isfile="true"/>
        </checkProperty>

    </target>

    <!--
       ========================================================================
         Initialize the build. Must be called by all targets
       ========================================================================
    -->
    <target name="init"
        depends="init.common,properties,check.properties">
    </target>

    <!--
       ========================================================================
         Compiles the sources
       ========================================================================
    -->
    <target name="compile" depends="init" description="Compile the sources">

        <mkdir dir="${target.classes.java.dir}"/>

        <propertyfile file="${target.classes.java.dir}/cactus.tasks"
          comment="Cactus Tasks for Ant">
            <entry key="runservertests"
              value="org.apache.cactus.integration.ant.RunServerTestsTask"/>
            <entry key="webmerge"
              value="org.apache.cactus.integration.ant.WebMergeTask"/>
        </propertyfile>

        <javac srcdir="${src.java.dir}" destdir="${target.classes.java.dir}"
          deprecation="${deprecation}" optimize="${optimize}" 
          debug="${debug}"/>

    </target>

    <!--
       ========================================================================
         Create the runtime jar file
       ========================================================================
    -->
    <target name="jar" depends="compile" description="Generate the integration jar">

        <jar jarfile="${target.dir}/${cactus.antintegration.jar.name}.jar">

            <manifest>
                <section name="org/apache/cactus/integration/ant/">
                    <attribute name="Specification-Title"
                        value="${project.name.text}"/>
                    <attribute name="Specification-Version"
                        value="${project.version}"/>
                    <attribute name="Specification-Vendor"
                        value="Apache Software Foundation"/>
                    <attribute name="Implementation-Title"
                        value="${project.name.file}"/>
                    <attribute name="Implementation-Version"
                        value="${project.version} ${TODAY}"/>
                    <attribute name="Implementation-Vendor"
                        value="Apache Software Foundation"/>
                </section>
            </manifest>

            <metainf dir=".">
                <include name="LICENSE.cactus"/>
            </metainf>
            <fileset dir="${target.classes.java.dir}"/>
        </jar>

    </target>

    <!--
       ========================================================================
         Generate the documentation (javadoc)
       ========================================================================
    -->
    <target name="doc.check" depends="init">

      <uptodate property="doc.uptodate"
          targetfile="${target.doc.api.dir}/index.html">
          <srcfiles dir="${src.java.dir}"
              includes="**/*.java, **/*.html"/>
      </uptodate>

    </target>

    <target name="doc" depends="doc.check" unless="doc.uptodate"
        description="Generates the API documentation">

        <mkdir dir="${target.doc.api.dir}"/>

        <javadoc
            sourcepath="${src.java.dir}"
            packagenames="org.apache.cactus.integration.ant.*"
            destdir="${target.doc.api.dir}"
            author="true"
            public="true"
            version="true"
            use="true"
            windowtitle="${project.name.text} ${project.version}"
            doctitle="${project.name.text} ${project.version}"
            bottom="Copyright &amp;copy; ${year} Apache Software Foundation.
                    All Rights Reserved.">

        </javadoc>

    </target>

    <!--
       ========================================================================
         Generate the distributable files
       ========================================================================
    -->
    <target name="dist.prepare" depends="jar,doc,checkstyle">

        <mkdir dir="${target.integration.dir}"/>
        <mkdir dir="${target.integration.lib.client.dir}"/>
        <mkdir dir="${target.integration.lib.server.dir}"/>
        <mkdir dir="${target.integration.lib.common.dir}"/>
        <mkdir dir="${target.integration.script.dir}"/>
        <mkdir dir="${target.integration.conf.dir}"/>

		<!-- Gather all server side Cactus jars -->
        <!-- (None at the moment) -->
        
		<!-- Gather all client side Cactus jars -->
        <copy tofile="${target.integration.lib.client.dir}/${cactus.antintegration.jar.name}-${project.version}.jar"
            file="${target.dir}/${cactus.antintegration.jar.name}.jar"/>

        <!-- Note: ATM we copy the servlet jar (and not the J2EE one). The 
             reasons are that ATM we only need the servlet API and that the
             J2EE jar is not redistributable -->
        <copy todir="${target.integration.lib.client.dir}" file="${servlet.jar}"/>

        <copy todir="${target.integration.lib.client.dir}" file="${commons.httpclient.jar}"/>

		<!-- Gather all shared (client and server) Cactus jars -->
        <copy tofile="${target.integration.lib.common.dir}/${cactus.framework.jar.name}-${project.version}.jar"
        	file="${cactus.framework.jar}"/>
        <copy todir="${target.integration.lib.common.dir}" file="${commons.logging.jar}"/>
        <copy todir="${target.integration.lib.common.dir}" file="${log4j.jar}"/>
        <copy todir="${target.integration.lib.common.dir}" file="${aspectjrt.jar}"/>
        <copy todir="${target.integration.lib.common.dir}" file="${junit.jar}"/>
        <copy todir="${target.integration.lib.common.dir}" file="${httpunit.jar}"/>

		<!-- Copy the scripts for the current J2EE API -->

        <filter token="cactus.antintegration.jar.name" 
        	value="${cactus.antintegration.jar.name}-${project.version}.jar"/>
        <filter token="cactus.framework.jar.name" 
        	value="${cactus.framework.jar.name}-${project.version}.jar"/>

		<basename property="log4j.jar.name" file="${log4j.jar}"/>
        <filter token="log4j.jar.name" value="${log4j.jar.name}"/>
		<basename property="aspectjrt.jar.name" file="${aspectjrt.jar}"/>
        <filter token="aspectjrt.jar.name" value="${aspectjrt.jar.name}"/>
		<basename property="commons.logging.jar.name" file="${commons.logging.jar}"/>
        <filter token="commons.logging.jar.name" value="${commons.logging.jar.name}"/>
		<basename property="junit.jar.name" file="${junit.jar}"/>
        <filter token="junit.jar.name" value="${junit.jar.name}"/>
		<basename property="commons.httpclient.jar.name" file="${commons.httpclient.jar}"/>
        <filter token="commons.httpclient.jar.name" value="${commons.httpclient.jar.name}"/>
		<basename property="httpunit.jar.name" file="${httpunit.jar}"/>
        <filter token="httpunit.jar.name" value="${httpunit.jar.name}"/>

		<copy todir="${target.integration.script.dir}" filtering="on">
			<fileset dir="${src.script.dir}/share"/>
			<fileset dir="${src.script.dir}/j2ee${j2ee.api}">
				<exclude name="build.xml"/>
			</fileset>
		</copy>
		<copy todir="${target.integration.dir}"
			file="${src.script.dir}/j2ee${j2ee.api}/build.xml"/>

		<!-- Copy the confs for the current J2EE API -->
		<copy todir="${target.integration.conf.dir}">
			<fileset dir="${src.conf.dir}/share"/>
			<fileset dir="${src.conf.dir}/j2ee${j2ee.api}"/>
		</copy>

		<!-- Copy the JSP Redirector -->
		<copy todir="${target.integration.conf.dir}" 
			file="${cactus.framework.web}/jspRedirector.jsp"/>

    </target>

    <target name="dist" depends="dist.prepare"
        description="Generate the distributable files">

        <mkdir dir="${dist.bin.dir}"/>
        <mkdir dir="${dist.doc.api.dir}"/>
        
        <!-- Copy the Integration -->
        <copy todir="${dist.bin.dir}/${project.name.file}">
            <fileset dir="${target.integration.dir}"/>
        </copy>
        
        <!-- Copy the generated documentation -->
        <copy todir="${dist.doc.api.dir}">
            <fileset dir="${target.doc.api.dir}"/>
        </copy>
        		
    </target>

    <!--
       ========================================================================
         Perform a code audit using CheckStyle.
       ========================================================================
    -->
    <target name="checkstyle" depends="init,init.checkstyle"
        if="checkstyle.available"
        description="Perform a code audit using Checkstyle">

        <mkdir dir="${target.dir}"/>

        <checkstyle config="./checkstyle.xml" 
            failOnViolation="false">

            <fileset dir="${src.java.dir}">
                <include name="**/*.java"/>
            </fileset>
        
            <formatter type="plain"/>
            <formatter type="xml"
                toFile="${target.dir}/checkstyle_results.xml"/>

            <property key="checkstyle.header.file" file="./LICENSE.cactus"/>
        </checkstyle>

    </target>

    <!--
       ========================================================================
         Generate the release
       ========================================================================
    -->
    <target name="release" depends="clean,dist"
        description="Generate the release files">

        <mkdir dir="${release.dir}"/>

        <zip destfile="${release.dir}/${main.release.name}.zip">
            <zipfileset dir="${dist.bin.dir}/${project.name.file}" 
                prefix="${main.release.name}">
            </zipfileset>
        </zip>
        
    </target>

</project>
