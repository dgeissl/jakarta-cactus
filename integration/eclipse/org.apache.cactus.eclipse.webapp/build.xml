<?xml version="1.0"?>
<!DOCTYPE project [
    <!ENTITY common SYSTEM "file:../../../build-common.xml">
]>

<!--
  =============================================================================
    Build file for the Webapp Eclipse plugin.

    This script should be started with the following command line :

        ant <target>

    Run "ant -projecthelp" to get a list of available targets.

    Note: basedir points to the main Cactus directory in order to have the same
          base dir for all Cactus subprojects and thus be able to share
          relative paths.
  =============================================================================
-->
<project name="Cactus Eclipse Webapp Plugin" default="dist" basedir="../../..">

  <!-- Base directory for all file related operations -->
  <property name="base.dir" 
      location="integration/eclipse/org.apache.cactus.eclipse.webapp"/>

  <!-- Include properties and targets common to the different subprojects -->
  &common;

  <!-- Global project properties -->
  <property name="project.name.text" value="Cactus Eclipse Webapp Plug-in"/>
  <property name="project.name.file" value="cactus-eclipse-webapp"/>

  <!--
     ========================================================================
       Initialize source, target and dist properties
     ========================================================================
  -->
  <target name="properties">

    <!-- Version by which the plugin will be identified -->
    <property name="project.version.plugin" 
        value="${project.version.release}.${DSTAMP}"/>

    <!-- Set the properties related to the source tree -->
    <property name="src.dir" location="${base.dir}/src"/>
    <property name="src.java.dir" location="${src.dir}/java"/>

    <!-- Set the properties related to the target area -->
    <property name="target.classes.dir" location="${target.dir}/classes"/>

    <!-- Set the properties related to the jar names -->
    <property name="cactus.eclipse.webapp.jar.name" value="webapp.jar"/>
    <property name="cactus.eclipse.webapp.src.zip.name" value="webappsrc.zip"/>

  </target>

  <!--
     ========================================================================
       Initialize the build. Must be called by all targets
     ========================================================================
  -->
  <target name="init" depends="init.common, properties">

    <echo>***** Needs Eclipse 2.1 or later *****</echo>
    <echo/>
    <echo>Dependencies:</echo>
    <echo>  eclipse.core.boot.jar = [${eclipse.core.boot.jar}]</echo>
    <echo>  eclipse.core.resources.jar = [${eclipse.core.resources.jar}]</echo>
    <echo>  eclipse.core.runtime.jar = [${eclipse.core.runtime.jar}]</echo>
    <echo>  eclipse.jdt.core.jar = [${eclipse.jdt.core.jar}]</echo>
    <echo>  eclipse.jdt.ui.jar = [${eclipse.jdt.ui.jar}]</echo>
    <echo>  eclipse.swt.jar = [${eclipse.swt.jar}]</echo>
    <echo>  eclipse.jface.jar = [${eclipse.jface.jar}]</echo>
    <echo>  eclipse.ui.workbench.jar = [${eclipse.ui.workbench.jar}]</echo>

    <condition property="properties.ok">
      <and>
        <available file="${eclipse.core.boot.jar}"/>
        <available file="${eclipse.core.resources.jar}"/>
        <available file="${eclipse.core.runtime.jar}"/>
        <available file="${eclipse.jdt.core.jar}"/>
        <available file="${eclipse.jdt.ui.jar}"/>
        <available file="${eclipse.swt.jar}"/>
        <available file="${eclipse.jface.jar}"/>
        <available file="${eclipse.ui.workbench.jar}"/>
      </and>
    </condition>

    <fail unless="properties.ok">One or more required dependancies could not
be resolved. Please check you build.properties file, and run Ant with the 
-verbose option for more details</fail>

  </target>

  <!--
     ========================================================================
       Compile the plugin
     ========================================================================
  -->
  <target name="compile" depends="init">
        		
    <mkdir dir="${target.classes.dir}"/>

    <javac destdir="${target.classes.dir}" deprecation="${deprecation}" 
        optimize="${optimize}" debug="${debug}">
      <src path="${src.java.dir}"/>
      <classpath>
        <pathelement location="${eclipse.core.boot.jar}"/>
        <pathelement location="${eclipse.core.resources.jar}"/>
        <pathelement location="${eclipse.core.runtime.jar}"/>
        <pathelement location="${eclipse.jdt.core.jar}"/>
        <pathelement location="${eclipse.jdt.ui.jar}"/>				
        <pathelement location="${eclipse.swt.jar}"/>
        <pathelement location="${eclipse.jface.jar}"/>
        <pathelement location="${eclipse.ui.workbench.jar}"/>
      </classpath>
    </javac>
		
    <copy todir="${target.classes.dir}">
      <fileset dir="${src.java.dir}">
        <exclude name="**/*.java"/>
        <exclude name="**/*.html"/>
      </fileset>
    </copy>
		
  </target>

  <!--
     ========================================================================
       Generate the jars
     ========================================================================
  -->
  <target name="jar" depends="compile" description="Generates the jars">
        
    <mkdir dir="${target.dir}"/>

    <jar jarfile="${target.dir}/${cactus.eclipse.webapp.jar.name}">
      <manifest>
        <section name="org/apache/cactus/eclipse/webapp/">
          <attribute name="Specification-Title"
              value="${project.name.text}"/>
          <attribute name="Specification-Version"
              value="${project.version}"/>
          <attribute name="Specification-Vendor"
              value="Apache Software Foundation"/>
          <attribute name="Implementation-Title"
              value="${project.name.file}"/>
          <attribute name="Implementation-Version"
              value="${project.version} ${TODAY}"/>
          <attribute name="Implementation-Vendor"
              value="Apache Software Foundation"/>
        </section>
      </manifest>
      <metainf dir=".">
        <include name="LICENSE.cactus"/>
      </metainf>
      <fileset dir="${target.classes.dir}"/>
    </jar>
				
    <zip zipfile="${target.dir}/${cactus.eclipse.webapp.src.zip.name}">
      <fileset dir="${src.java.dir}"/>
    </zip>

  </target>

  <!--
     ========================================================================
       Generate the distributables for this project, i.e the unzipped
       plugin structure.
     ========================================================================
  -->
  <target name="dist" depends="checkstyle,jar"
      description="Generate the distributable files">
	  
    <mkdir dir="${dist.bin.dir}"/>
    <copy todir="${dist.bin.dir}">
      <fileset dir="${target.dir}">
        <include name="${cactus.eclipse.webapp.jar.name}"/>
        <include name="${cactus.eclipse.webapp.src.zip.name}"/>
      </fileset>
      <fileset file="${base.dir}/plugin.properties"/>
      <fileset file="${basedir}/LICENSE.cactus"/>
    </copy>
    <!-- Eclipse requires the version specified in the plugin descriptor to be
         a legal version in the format major.minor.service, so we set it to
         0.0.0 and replace that with the actual plugin version here -->
    <copy todir="${dist.bin.dir}" file="${base.dir}/plugin.xml">
      <filterset begintoken='"' endtoken='"'>
        <filter token='0.0.0' value='"${project.version.plugin}"'/>
      </filterset>
    </copy>
    
  </target>

  <!--
     ========================================================================
       Perform a code audit using CheckStyle. Only performs the audit if
       the checkstyle jar is in the Ant classpasth.
     ========================================================================
  -->
  <target name="checkstyle" depends="init,init.checkstyle" 
      if="checkstyle.available"
      description="Perform a code audit using Checkstyle">

    <mkdir dir="${target.dir}"/>
    <checkstyle config="./checkstyle.xml" failOnViolation="true">
      <fileset dir="${src.java.dir}">
        <include name="**/*.java"/>
      </fileset>
      <formatter type="plain"/>
      <formatter type="xml" toFile="${target.dir}/checkstyle_results.xml"/>
      <property key="checkstyle.header.file" file="./LICENSE.cactus"/>
    </checkstyle>

  </target>

  <!--
     ========================================================================
       Generate the release
     ========================================================================
  -->
  <target name="release" depends="clean,dist"
      description="Generate the release files">

    <mkdir dir="${release.dir}"/>
    <zip destfile="${release.dir}/${main.release.name}.zip">
      <zipfileset dir="${dist.bin.dir}"
        prefix="org.apache.cactus.eclipse.webapp_${project.version}">
      </zipfileset>
    </zip>
        
  </target>

  <!--
     ========================================================================
       Clean generated files (including distributables)
     ========================================================================
  -->
  <target name="clean" depends="init.display,init.properties"
      description="Clean all generated files">

    <delete dir="${target.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${release.dir}"/>

  </target>

</project>
