<?xml version="1.0"?>
<!DOCTYPE project [
    <!ENTITY common SYSTEM "file:../../../build-common.xml">
]>

<!--
  =============================================================================
    Build file for the Cactus Eclipse Runner Plug-in.

    $Id$
  =============================================================================
-->
<project name="Cactus Eclipse Runner Plugin" default="dist" basedir="../../..">

    <!-- Base directory for all file related operations -->
  <property name="base.dir"
      location="integration/eclipse/org.apache.cactus.eclipse.runner"/>
  
  <property name="cactus.eclipse.webapp.dir"
      location="integration/eclipse/org.apache.cactus.eclipse.webapp"/>
  <property name="cactus.eclipse.webapp.jar.name" value="webapp.jar"/>
  <property name="cactus.eclipse.webapp.jar"
      location="${cactus.eclipse.webapp.dir}/target/${cactus.eclipse.webapp.jar.name}"/>

  <!-- Indicate that this subproject is dependant on the version of the J2EE
       API available -->
  <property name="j2ee.dependant" value="true"/>

  <!-- Include properties and targets common to the different subprojects -->
  &common;

  <!-- Global project properties -->
  <property name="project.name.text" value="Cactus Eclipse Runner Plug-in"/>
  <property name="project.name.file" value="cactus-eclipse-runner"/>

  <!--
     ========================================================================
       Initialize source, target and dist properties
     ========================================================================
  -->
  <target name="properties" depends="init.common">

    <!-- Set the properties related to the source tree -->
    <property name="src.dir" location="${base.dir}/src"/>
    <property name="src.conf.dir" location="${src.dir}/conf"/>
    <property name="src.java.dir" location="${src.dir}/java"/>
    <property name="src.script.dir" location="${src.dir}/script"/>

    <!-- Set the properties related to the target area -->
    <property name="target.classes.dir" location="${target.dir}/classes"/>

    <!-- Set the properties related to the jar names -->
    <property name="cactus.eclipse.runner.jar.name" 
        value="cactussupport.jar"/>
    <property name="cactus.eclipse.runner.src.zip.name" 
        value="cactussupportsrc.zip"/>

  </target>

  <!--
     ========================================================================
       Initialize the build. Must be called by all targets
     ========================================================================
  -->
  <target name="init" depends="properties">

    <echo>***** Needs Eclipse 2.1 RC2 or later *****</echo>
    <echo/>
    <echo>Dependencies:</echo>
    <echo>  aspectjrt.jar = [${aspectjrt.jar}]</echo>
    <echo>  cactus.jar = [${cactus.jar}]</echo>
    <echo>  cactus.ant.jar = [${cactus.ant.jar}]</echo>
    <echo>  cactus.eclipse.webapp.jar = [${cactus.eclipse.webapp.jar}]</echo>
    <echo>  commons.httpclient.jar = [${commons.httpclient.jar}]</echo>
    <echo>  commons.logging.jar = [${commons.logging.jar}]</echo>
    <echo>  eclipse.ant.core.jar = [${eclipse.ant.core.jar}]</echo>
    <echo>  eclipse.core.boot.jar = [${eclipse.core.boot.jar}]</echo>
    <echo>  eclipse.core.resources.jar = [${eclipse.core.resources.jar}]</echo>
    <echo>  eclipse.core.runtime.jar = [${eclipse.core.runtime.jar}]</echo>
    <echo>  eclipse.debug.core.jar = [${eclipse.debug.core.jar}]</echo>
    <echo>  eclipse.debug.ui.jar = [${eclipse.debug.ui.jar}]</echo>
    <echo>  eclipse.jdt.core.jar = [${eclipse.jdt.core.jar}]</echo>
    <echo>  eclipse.jdt.junit.jar = [${eclipse.jdt.junit.jar}]</echo>
    <echo>  eclipse.jdt.launching.jar = [${eclipse.jdt.launching.jar}]</echo>
    <echo>  eclipse.jdt.ui.jar = [${eclipse.jdt.ui.jar}]</echo>
    <echo>  eclipse.jface.jar = [${eclipse.jface.jar}]</echo>
    <echo>  eclipse.swt.jar = [${eclipse.swt.jar}]</echo>
    <echo>  eclipse.ui.workbench.jar = [${eclipse.ui.workbench.jar}]</echo>
    <echo>  eclipse.ui.externaltools.jar = [${eclipse.ui.externaltools.jar}]</echo>
    <echo>  httpunit.jar = [${httpunit.jar}]</echo>
    <echo>  j2ee.jar = [${j2ee.jar}]</echo>
    <echo>  jetty.jar = [${jetty.jar}]</echo>
    <echo>  junit.jar = [${junit.jar}]</echo>
    <echo>  log4j.jar = [${log4j.jar}]</echo>
    <echo>  nekohtml.jar = [${nekohtml.jar}]</echo>

    <condition property="properties.ok">
      <and>
        <available file="${aspectjrt.jar}"/>
        <available file="${cactus.jar}"/>
        <available file="${cactus.ant.jar}"/>
        <available file="${cactus.eclipse.webapp.jar}"/>
        <available file="${commons.httpclient.jar}"/>
        <available file="${commons.logging.jar}"/>
        <available file="${eclipse.ant.core.jar}"/>
        <available file="${eclipse.core.boot.jar}"/>
        <available file="${eclipse.core.resources.jar}"/>
        <available file="${eclipse.core.runtime.jar}"/>
        <available file="${eclipse.debug.core.jar}"/>
        <available file="${eclipse.debug.ui.jar}"/>
        <available file="${eclipse.jdt.core.jar}"/>
        <available file="${eclipse.jdt.junit.jar}"/>
        <available file="${eclipse.jdt.launching.jar}"/>
        <available file="${eclipse.jdt.ui.jar}"/>
        <available file="${eclipse.jface.jar}"/>
        <available file="${eclipse.swt.jar}"/>
        <available file="${eclipse.ui.workbench.jar}"/>
        <available file="${eclipse.ui.externaltools.jar}"/>
        <available file="${httpunit.jar}"/>
        <available file="${j2ee.jar}"/>
        <available file="${jetty.jar}"/>
        <available file="${junit.jar}"/>
        <available file="${log4j.jar}"/>
        <available file="${nekohtml.jar}"/>
      </and>
    </condition>

    <fail unless="properties.ok">One or more required dependancies could not
be resolved. Please check you build.properties file, and run Ant with the 
-verbose option for more details</fail>

    <condition property="eclipse.version" value="ok">
      <available classname="org.eclipse.jdt.junit.ITestRunListener"
          classpath="${eclipse.jdt.junit.jar}"/>
    </condition>

    <fail message="Eclipse version must be higher than 2.1 RC2" 
        unless="eclipse.version"/>

  </target>

  <!--
     ========================================================================
       Compile the plugin
     ========================================================================
  -->
  <target name="compile" depends="init">

    <mkdir dir="${target.classes.dir}"/>

    <javac destdir="${target.classes.dir}" deprecation="${deprecation}" 
        optimize="${optimize}" debug="${debug}">
      <src path="${src.java.dir}"/>
      <classpath>
        <pathelement location="${cactus.eclipse.webapp.jar}"/>
        <pathelement location="${eclipse.ant.core.jar}"/>
        <pathelement location="${eclipse.core.boot.jar}"/>
        <pathelement location="${eclipse.core.resources.jar}"/>
        <pathelement location="${eclipse.core.runtime.jar}"/>
        <pathelement location="${eclipse.debug.core.jar}"/>
        <pathelement location="${eclipse.debug.ui.jar}"/>
        <pathelement location="${eclipse.jdt.core.jar}"/>
        <pathelement location="${eclipse.jdt.junit.jar}"/>
        <pathelement location="${eclipse.jdt.launching.jar}"/>
        <pathelement location="${eclipse.jdt.ui.jar}"/>
        <pathelement location="${eclipse.jface.jar}"/>
        <pathelement location="${eclipse.swt.jar}"/>
        <pathelement location="${eclipse.ui.workbench.jar}"/>
        <pathelement location="${eclipse.ui.externaltools.jar}"/>
      </classpath>
    </javac>

    <copy todir="${target.classes.dir}">
      <fileset dir="${src.java.dir}" excludes="**/*.java"/>
    </copy>

  </target>

  <!--
     ========================================================================
       Generate the jars
     ========================================================================
  -->
  <target name="jar" depends="compile"
      description="Generates the jars">
      
    <mkdir dir="${target.dir}"/>

    <jar jarfile="${target.dir}/${cactus.eclipse.runner.jar.name}">
      <manifest>
        <section name="org/apache/cactus/eclipse/runner/">
          <attribute name="Specification-Title"
              value="${project.name.text}"/>
          <attribute name="Specification-Version"
              value="${project.version}"/>
          <attribute name="Specification-Vendor"
              value="Apache Software Foundation"/>
          <attribute name="Implementation-Title"
              value="${project.name.file}"/>
          <attribute name="Implementation-Version"
              value="${project.version} ${TODAY}"/>
          <attribute name="Implementation-Vendor"
              value="Apache Software Foundation"/>
        </section>
      </manifest>
      <metainf dir=".">
        <include name="LICENSE.cactus"/>
      </metainf>
      <fileset dir="${target.classes.dir}"/>
    </jar>

    <zip zipfile="${target.dir}/${cactus.eclipse.runner.src.zip.name}">
      <fileset dir="${src.java.dir}"/>
    </zip>

  </target>

  <!--
     ========================================================================
       Generate the distributables for this project, i.e the unzipped
       plugin structure.
     ========================================================================
  -->
  <target name="dist" depends="checkstyle,jar"
    description="Generate the distributable files">

    <mkdir dir="${dist.bin.dir}"/>
    <copy todir="${dist.bin.dir}">
      <fileset dir="${target.dir}">
        <include name="${cactus.eclipse.runner.jar.name}"/>
        <include name="${cactus.eclipse.runner.src.zip.name}"/>
      </fileset>
      <fileset dir="${basedir}" includes="LICENSE.*"/>
      <fileset dir="${base.dir}">
        <include name="plugin.properties"/>
        <include name="README.txt"/>
        <include name="icons/*.*"/>
      </fileset>
    </copy>
    <!-- Eclipse requires the version specified in the plugin descriptor to
         be a legal version in the format major.minor.service, so we set it
         to 0.0.0 and replace that with the actual plugin version here -->
    <copy todir="${dist.bin.dir}" file="${base.dir}/plugin.xml">
      <filterset begintoken='"' endtoken='"'>
        <filter token='0.0.0' 
            value='"${project.version.major}.${project.version.minor}.${DSTAMP}"'/>
      </filterset>
    </copy>

    <!-- Copy the configuration files -->
    <mkdir dir="${dist.bin.dir}/conf"/>
    <copy todir="${dist.bin.dir}/conf">
      <fileset dir="${src.conf.dir}/share"/>
      <fileset dir="${src.conf.dir}/j2ee${j2ee.api}"/>
      <fileset file="${cactus.framework.web}/jspRedirector.jsp"/>
    </copy>

    <!-- Copy the Ant build files -->
    <mkdir dir="${dist.bin.dir}/script"/>
    <filter token="cactus.jar.name" value="${cactus.jar.name}.jar"/>
    <filter token="cactus.ant.jar.name" value="${cactus.ant.jar.name}.jar"/>
    <basename property="log4j.jar.name" file="${log4j.jar}"/>
    <filter token="log4j.jar.name" value="${log4j.jar.name}"/>
    <basename property="aspectjrt.jar.name" file="${aspectjrt.jar}"/>
    <filter token="aspectjrt.jar.name" value="${aspectjrt.jar.name}"/>
    <basename property="commons.logging.jar.name"
        file="${commons.logging.jar}"/>
    <filter token="commons.logging.jar.name"
        value="${commons.logging.jar.name}"/>
    <basename property="junit.jar.name" file="${junit.jar}"/>
    <filter token="junit.jar.name" value="${junit.jar.name}"/>
    <basename property="commons.httpclient.jar.name"
        file="${commons.httpclient.jar}"/>
    <filter token="commons.httpclient.jar.name"
        value="${commons.httpclient.jar.name}"/>
    <basename property="httpunit.jar.name" file="${httpunit.jar}"/>
    <filter token="httpunit.jar.name" value="${httpunit.jar.name}"/>
    <basename property="nekohtml.jar.name" file="${nekohtml.jar}"/>
    <filter token="nekohtml.jar.name" value="${nekohtml.jar.name}"/>
    <basename property="xerces.jar.name" file="${xerces.jar}"/>
    <filter token="xerces.jar.name" value="${xerces.jar.name}"/>
    <basename property="xmlapis.jar.name" file="${xmlapis.jar}"/>
    <filter token="xmlapis.jar.name" value="${xmlapis.jar.name}"/>
    <copy todir="${dist.bin.dir}/script" filtering="on">
      <fileset dir="${src.script.dir}/share"/>
      <fileset dir="${src.script.dir}/j2ee${j2ee.api}"/>
    </copy>

    <!-- Copy the required libraries -->
    <mkdir dir="${dist.bin.dir}/lib"/>
    <copy todir="${dist.bin.dir}/lib" file="${jetty.jar}"/>
    <mkdir dir="${dist.bin.dir}/lib/client"/>
    <copy todir="${dist.bin.dir}/lib/client">
      <fileset file="${cactus.ant.jar}"/>
      <fileset file="${commons.httpclient.jar}"/>
      <fileset file="${j2ee.jar}"/>
      <fileset file="${nekohtml.jar}"/>
    </copy>
    <mkdir dir="${dist.bin.dir}/lib/common"/>
    <copy todir="${dist.bin.dir}/lib/common">
      <fileset file="${aspectjrt.jar}"/>
      <fileset file="${cactus.jar}"/>
      <fileset file="${commons.logging.jar}"/>
      <fileset file="${log4j.jar}"/>
      <fileset file="${httpunit.jar}"/>
      <fileset file="${junit.jar}"/>
    </copy>
    <mkdir dir="${dist.bin.dir}/lib/server"/>
    <!-- The directory needs a file because it is otherwise pruned by the 
         Eclipse update feature -->
    <touch file="${dist.bin.dir}/lib/server/KEEPIT"/>

  </target>

  <!--
     ========================================================================
       Perform a code audit using CheckStyle. Only performs the audit if
       the checkstyle jar is in the Ant classpasth.
     ========================================================================
  -->
  <target name="checkstyle" depends="init,init.checkstyle" 
      if="checkstyle.available"
      description="Perform a code audit using Checkstyle">

    <mkdir dir="${target.dir}"/>
    <checkstyle config="./checkstyle.xml" failOnViolation="true">
      <fileset dir="${src.java.dir}">
        <include name="**/*.java"/>
      </fileset>
      <formatter type="plain"/>
      <formatter type="xml"
          toFile="${target.dir}/checkstyle_results.xml"/>
      <property key="checkstyle.header.file" file="./LICENSE.cactus"/>
    </checkstyle>

  </target>

  <!--
     ========================================================================
       Generate the release
     ========================================================================
  -->
  <target name="release" depends="clean,dist"
      description="Generate the release files">

    <mkdir dir="${release.dir}"/>
    <zip destfile="${release.dir}/${main.release.name}.zip">
      <zipfileset dir="${dist.bin.dir}"
          prefix="org.apache.cactus.eclipse.runner_${project.version}">
      </zipfileset>
    </zip>

  </target>

  <!--
     ========================================================================
       Clean generated files (including distributables)
     ========================================================================
  -->
  <target name="clean" depends="init.display, init.properties"
      description="Clean all generated files">

    <delete dir="${target.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete dir="${release.dir}"/>

  </target>

</project>
