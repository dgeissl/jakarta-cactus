<?xml version="1.0"?>

<!--
  =============================================================================
    Build file for Cactus related administrative tasks (build and upload the
    Cactus web site, upload a distribution, etc).

    See build.properties.sample for details of mandatory and optional
    properties to set.

    This script should be started with the following command line :

        ant <target>

    Run "ant -projecthelp" to get a list of available targets. The default
    target is "dist"
  =============================================================================
-->
<project name="Cactus Administration" default="release" basedir=".">

    <!-- Give user a chance to override without editing this file
         (and without typing -D each time it compiles it) -->
    <property file="build.properties" />
    <property file="${user.home}/build.properties" />

    <!-- Global project properties -->
    <property name="project.name.text" value="Cactus Administration"/>

    <!-- The version is used to know where to unpack the website. If the 
         version contains "dev" in its name, it will be unpacked in 
         "/www/jakarta.apache.org/cactus/<version name>". If it does not
         contain "dev", it means we are deploying the documentation for
         the latest stable release and it will be unpacked in 
         "/www/jakarta.apache.org/cactus". -->
    <property name="project.version" value="1.5dev"/>

    <!-- Prefix to add to all distributable files -->
    <property name="project.prefix" value="jakarta-"/>

    <property name="year" value="2000-2003"/>

    <!--
       ========================================================================
         Set the properties related to the target area
       ========================================================================
    -->
    <!-- Distribution directory, i.e. where the expanded distibutable files
         are located -->
    <property name="dist.dir" value="dist"/>
    <property name="dist.doc.dir" value="${dist.dir}/doc"/>
    <property name="dist.doc.api.dir" value="${dist.doc.dir}/api"/>

    <!-- Release directory, i.e. where the zipped distribution is located -->
    <property name="release.dir" value="release"/>

    <!--
       ========================================================================
         Display configurable properties values
       ========================================================================
    -->
    <target name="display.properties">

        <echo message="----- ${project.name.text} -----"/>
        <echo message=""/>
        <echo message="java.class.path = ${java.class.path}"/>
        <echo message=""/>
        <echo message="java.home = ${java.home}"/>
        <echo message="user.home = ${user.home}"/>
        <echo message="ant.home = ${ant.home}"/>
        <echo message=""/>
        <echo message="j2ee.12.jar = ${j2ee.12.jar}"/>
        <echo message="j2ee.13.jar = ${j2ee.13.jar}"/>
        <echo message=""/>
        <echo message="admin.jakarta.username = ${admin.jakarta.username}"/>
        <echo message="admin.scp = ${admin.scp}"/>
        <echo message="admin.ssh = ${admin.ssh}"/>
        <echo message=""/>
        <echo message="clover.enable = ${clover.enable}"/>
        <echo message="clover.jar = ${clover.jar}"/>
        <echo message=""/>

    </target>

    <!--
       ========================================================================
         Verify that all mandatory properties have been set
       ========================================================================
    -->
    <target name="check.properties">

        <condition property="properties.ok">
            <and>
                <available file="${j2ee.12.jar}"/>
                <available file="${j2ee.13.jar}"/>
                <isset property="admin.jakarta.username"/>
                <isset property="admin.scp"/>
                <isset property="admin.ssh"/>
                <isset property="clover.enable"/>
                <available file="${clover.jar}"/>
           </and>
        </condition>

        <fail message="Missing property or property pointing to an invalid file (check your build.properties file)"
            unless="properties.ok"/>

    </target>

    <!--
       ========================================================================
         Initialize the build. Must be called by all targets
       ========================================================================
    -->
    <target name="init" depends="display.properties,check.properties">

        <tstamp/>

    </target>

    <!--
       ========================================================================
         Generate the web site.
       ========================================================================
    -->
    <target name="dist" depends="clean">

        <!-- Generate the website first -->
        <ant target="clean.all" inheritAll="false"/>
        <ant target="run.clover" inheritAll="false">
            <property name="j2ee.jar" value="${j2ee.12.jar}"/>
        </ant>
        <ant target="run.clover" inheritAll="false">
            <property name="j2ee.jar" value="${j2ee.13.jar}"/>
        </ant>
        <ant target="run.documentation" inheritAll="false"/>

        <!-- Package the web site -->
        <mkdir dir="${dist.doc.dir}"/>

        <copy todir="${dist.doc.dir}">
            <fileset dir="documentation/dist/doc">
                <exclude name="**/javadoc*.html"/>
                <exclude name="**/coverage*.html"/>
            </fileset>
        </copy>
        <copy tofile="${dist.doc.dir}/javadoc.html"
            file="documentation/dist/doc/javadoc.html"/>
        <copy tofile="${dist.doc.dir}/coverage.html"
            file="documentation/dist/doc/coverage.html"/>

        <!-- copy javadoc -->
        <copy todir="${dist.doc.api.dir}/anttasks">
            <fileset dir="anttasks/dist/doc/api"/>
        </copy>
        <copy todir="${dist.doc.api.dir}/framework-12">
            <fileset dir="framework/dist-12/doc/api"/>
        </copy>
        <copy todir="${dist.doc.api.dir}/framework-13">
            <fileset dir="framework/dist-13/doc/api"/>
        </copy>

        <!-- Copy Clover reports -->
        <copy todir="${dist.doc.dir}/clover-12">
            <fileset dir="dist-12/doc/clover-12"/>
        </copy>
        <copy todir="${dist.doc.dir}/clover-13">
            <fileset dir="dist-13/doc/clover-13"/>
        </copy>

    </target>

    <!--
       ========================================================================
         Package the generated web site
       ========================================================================
    -->
    <target name="release" depends="dist"
        description="Generate the Cactus web site">

        <mkdir dir="${release.dir}"/>

        <property name="cactus.website.name"
            value="${project.prefix}cactus-website-${DSTAMP}"/>

        <tar tarfile="${release.dir}/${cactus.website.name}.tar">
            <tarfileset dir="${dist.dir}/doc"/>
        </tar>
        <gzip zipfile="${release.dir}/${cactus.website.name}.tar.gz"
            src="${release.dir}/${cactus.website.name}.tar"/>
        <delete file="${release.dir}/${cactus.website.name}.tar"/>

    </target>

    <!--
       ========================================================================
         Deploy the web site to the Jakarta server, using the 'scp'
         and 'ssh' commands.
       ========================================================================
    -->
    <target name="deploy.init">

        <property name="cactus.homepage"
            value="/www/jakarta.apache.org/cactus"/>

        <condition property="is.dev.version">
            <contains string="${project.version}" substring="dev"/>
        </condition>

        <exec dir="." executable="${admin.scp}">
            <arg value="${release.dir}/${cactus.website.name}.tar.gz"/>
            <arg value="${admin.jakarta.username}@jakarta.apache.org:${cactus.homepage}"/>
        </exec>

    </target>

    <target name="deploy.release" unless="is.dev.version">

        <echo>Deploying release version to ${cactus.homepage} ...</echo>
        
        <exec dir="." executable="${admin.ssh}">
            <arg line="-l ${admin.jakarta.username} jakarta.apache.org 'cd ${cactus.homepage};gunzip ${cactus.website.name}.tar.gz;tar xvf ${cactus.website.name}.tar;rm ${cactus.website.name}.tar'"/>
        </exec>

    </target>

    <target name="deploy.dev" if="is.dev.version">

        <echo>Deploying dev version to ${cactus.homepage}/${project.version} ...</echo>

        <exec dir="." executable="${admin.ssh}">
            <arg line="-l ${admin.jakarta.username} jakarta.apache.org 'cd ${cactus.homepage};mkdir ${project.version};gunzip ${cactus.website.name}.tar.gz;tar xvf ${cactus.website.name}.tar -C${project.version};rm ${cactus.website.name}.tar'"/>
        </exec>

    </target>

    <target name="deploy" depends="release,deploy.init,deploy.release,deploy.dev"
        description="Deploy the Cactus web site">
    </target>

   <!--
       ========================================================================
         Clean generated files (including distributables)
       ========================================================================
    -->
    <target name="clean" depends="init" description="Clean all generated files">

        <delete dir="${dist.dir}"/>

    </target>

</project>
