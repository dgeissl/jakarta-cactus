<?xml version="1.0"?>

<!--
 * ========================================================================
 * 
 * Copyright 2001-2004 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * ========================================================================
-->

<document id="todo">

  <properties>
    <title>Roadmap/Todo for Cactus</title>
  </properties>

  <body>

    <section name="Forewords">
      <p>
        As is stated on the Cactus <a href="site:goals">goals</a> page, 
        the intention is to explore as much as possible in the realm of unit 
        testing of server side java code ...
      </p>
      <p>
        This brings a bad news and a good one ... The
        bad one is that the TODO list is likely to keep growing or at least
        have a respectable size ... The good one
        is that there will be work for everyone ... :-)
      </p>
      <p>
        If you are interested in participating, send an email on the Cactus 
        mailing list stating your interest and you'll be enrolled right 
        away ... We're always looking for help ! Don't be put off if in the 
        "Volunteer" column there is already a person listed. On the contrary, 
        the more person that participate in a given task, the better (like in 
        pair programming, several sets of eyes are always better than one!). 
        However you'll need to sync. with these others persons but this is 
        easily done by posting to the mailing-list.
      </p>
      <p>
        The game has just begun ... !
      </p>
    </section>

    <section name="Cactus 2.0">
 
      <subsection name="Documentation">
      
        <table>
          <th>Description</th>
          <th>Volunteers</th>
          <tr>
            <td>Add documentation for form-based authentication.</td>
            <td>Vincent Massol</td>
          </tr>
          <tr>
            <td>Fix problems in changes.xml XSL stylesheet transformation so that
          HTML elements are not stripped (such as the &lt;p&gt; elements we
          have there).</td>
            <td>-</td>
          </tr>
          <tr>
            <td>Improve the documentation CheckSitemap Ant task to check external URLs
          (when online).</td>
            <td>-</td>
          </tr>
          <tr>
            <td>Rewrite "Quick start guide" to take into account the different
          front ends.</td>
            <td>-</td>
          </tr>
        </table>
      </subsection>

    <subsection name="Build Process">
      <table>
          <th>Description</th>
          <th>Volunteers</th>
          <tr>
            <td>Fix the nightly Gump build so that the changes page get generated
        with the CVS changelog information. ATM, it's always empty which
        negates this nice feature...
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
              Add an automated Maven build (using codehaus). See
              http://wiki.codehaus.org/general/CodehausBuildmeister.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
            Prevent the sample jetty project from building if the J2EE API is 1.2.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
            Add a Gump definition for building the Eclipse Site project
        and only released an installed Eclipse update web site (no
        zips). Same as what is on 
        http://dev.eclipse.org/viewcvs/indextech.cgi/~checkout~/org.eclipse.ajdt/download.html.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
            Add support in Ant Integration for the J2EE RI.
            </td>
            <td>-</td>
          </tr>
      </table>
    </subsection>
    
    <subsection name="Design/Code">
      <table>
          <th>Description</th>
          <th>Volunteers</th>
          <tr>
            <td>
            Run JDiff before releasing to mark new classes/methods/members with
        <code>@since Cactus 1.6</code>.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
           Add EJB Redirectors so that unit testing of code that require an EJB
        is facilitated. For example, let's imagine you need to test that an
        object that has been put in the JNDI tree by a servlet can be retrieved
        by an EJB. These are not unit tests per see but rather integration
        tests, which is Cactus favorite domain. Also these redirectors could be
        used to directly unit tests EJB whithout requiring a servlet
        environment (at the current time, you need to call your EJB from a
        Servlet/JSP/Filter Redirector, which is fine for certain tests but not
        needed for others.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
            Enhance the <code>runservertests</code> task to accept nested
        <code>&lt;containerset&gt;</code> elements.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
              Add test case for form-based authentication.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Improve the ServletTestRunner: look at ways to make it run without the
        permission to set system properties.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
              Continue the JMS Redirector/Client to test Message Driven Beans.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Potentially replace access to instance variables of redirectors by 
        method calls. For example, replace "request.xxx()" by 
        "getHttpServletRequest().xxx()". Deprecate the direct access. Needs
        to be discussed on cactus-dev. Also, deprecate XXXTestCase in favor
        of test suites.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Add support for multi-concurrent Cactus tests. This involves storing
        each test result under a unique key in the application scope.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Improve support for the JUnitReport XML format so that the Ant-provided
        <code>junit-noframes.xsl</code> XSL is completely supported. ATM, some
        sections appear blank.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Explore ways to improve the performance and design of the HTTP
        transport. Currently, each test invocation involves a new connection
        to the server. The HTTP/1.1 Keepalive feature could be used to reuse a
        single connection for all test invocations. Responses to the
        GET_RESULTS request do not need to include a body if there was no
        exception on the server-side. Possibly use custom HTTP headers to
        communicate the Cactus service parameters such as the name of the test
        class and method, instead of using query string parameters.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Add a <code>OpenEJBTestSetup</code> class for OpenEJB integration
        (in the same spirit as our current <code>JettyTestSetup</code>
        class.
            </td>
            <td>-</td>
          </tr>
      </table>    
    </subsection>

    <subsection name="Ideas">
      <p>
        Ideas to explore ...
      </p>
      <table>
          <th>Description</th>
          <th>Volunteers</th>
          <tr>
            <td>
        Add performance extensions to be able to test each single method in
        performance: response time. Need to add notion of server time in
        cactus XML response. And need extensions (probably TestSuite 
        extensions to repeat each test or start several threads). Idea 
        initially suggested by
        <a href="mailto:rimovm@centercomp.com">Michael Rimov</a>.
        Integrate JUnitPerf.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Use <a href="http://xdoclet.sourceforge.net/docs/">XDoclet</a>
        with Cactus to better provide continuous integration. It could be
        used to automatically generate <code>web.xml</code> files,
        automatically generating test cases from methods to test, ...
            </td>
            <td>-</td>
          </tr>
         <tr>
            <td>
         Add tutorial on Cactus and AOP unit testing (using AspectWerkz
        for example). Also research adding a Cactus Aspect extension to allow 
        writing test cases as Aspects (this would allow to
        remove the need for Cactus redirectors in most cases).
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
        Help Cactus users test multipart/form-data. At least explain how to do
        it. Libraries to help on the server-side include 
        <a href="http://www.servlets.com/cos/index.html">cos.jar</a>
        and <a href="http://jakarta.apache.org/commons/fileupload/">Commons FileUpload</a>.
        Then we still need to provide a mechanism to easily send
        multipart/form-data on the Cactus client side. The best solution would
        be to use HttpClient but we are currently not exposing the HttpClient
        API so that it could be used in a test. Submitted by
        <a href="mailto:Gunnar.Skogen@ergo.no">Gunnar Ole Skogen</a>.
            </td>
            <td>-</td>
          </tr>
          <tr>
            <td>
              Provide a full servlet container test suite a la Watchdog using Cactus
            </td>
            <td>-</td>
          </tr>
      </table>
    </subsection>
    </section>
  </body>
</document>
