    <!--
       ========================================================================
         Start Tomcat 4.0
       ========================================================================
    -->
    <target name="start.tomcat.40" depends="checkwindows, windows.start.tomcat.40, other.start.tomcat.40"/>
    
    <target name="windows.start.tomcat.40" if="isWindows">
        <property name="target.tomcat40.dir"
            value="${target.test.dir}/tomcat40"/>
        <java jvm='javaw' classname="org.apache.catalina.startup.Bootstrap" fork="yes">

            <jvmarg value="-Dcatalina.home=${home.tomcat.40}"/>
            <jvmarg value="-Dcatalina.base=${target.tomcat40.dir}"/>
            <arg value="start"/>
            
            <classpath>

              <!-- These are ignored if -Dbuild.sysclasspath=only is used -->
              <pathelement path="${java.home}/../lib/tools.jar"/>
              <fileset dir="${home.tomcat.40}">
                  <include name="bin/bootstrap.jar"/>
              </fileset>

              <!-- This is to allow the use of -Dbuild.sysclasspath=only when
                   starting Ant - Meaning that all jars need to be on the
                   initial classpath. -->
              <pathelement path="${java.class.path}"/>

            </classpath>
        </java>

    </target>

    <target name="other.start.tomcat.40" unless="isWindows">
        <property name="target.tomcat40.dir"
            value="${target.test.dir}/tomcat40"/>
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">

            <jvmarg value="-Dcatalina.home=${home.tomcat.40}"/>
            <jvmarg value="-Dcatalina.base=${target.tomcat40.dir}"/>
            <arg value="start"/>
            
            <classpath>

              <!-- These are ignored if -Dbuild.sysclasspath=only is used -->
              <pathelement path="${java.home}/../lib/tools.jar"/>
              <fileset dir="${home.tomcat.40}">
                  <include name="bin/bootstrap.jar"/>
              </fileset>

              <!-- This is to allow the use of -Dbuild.sysclasspath=only when
                   starting Ant - Meaning that all jars need to be on the
                   initial classpath. -->
              <pathelement path="${java.class.path}"/>

            </classpath>
        </java>

    </target>
   
    <!--
       ========================================================================
         Stop Tomcat 4.0
       ========================================================================
    -->
    <target name="stop.tomcat.40" depends="checkwindows, windows.stop.tomcat.40, other.stop.tomcat.40"/>

    <target name="windows.stop.tomcat.40" if="isWindows">
        <property name="target.tomcat40.dir"
            value="${target.test.dir}/tomcat40"/>
        <java jvm='javaw' classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${home.tomcat.40}"/>
            <jvmarg value="-Dcatalina.base=${target.tomcat40.dir}"/>
            <arg value="stop"/>
            <classpath>

              <!-- This is to allow the use of -Dbuild.sysclasspath=only when
                   starting Ant - Meaning that all jars need to be on the
                   initial classpath -->
              <pathelement path="${java.class.path}"/>

              <!-- These are ignored if -Dbuild.sysclasspath=only is used -->
              <fileset dir="${home.tomcat.40}">
                  <include name="bin/bootstrap.jar"/>
              </fileset>
            </classpath>
        </java>

    </target>

    <target name="other.stop.tomcat.40" unless="isWindows">
        <property name="target.tomcat40.dir"
            value="${target.test.dir}/tomcat40"/>
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${home.tomcat.40}"/>
            <jvmarg value="-Dcatalina.base=${target.tomcat40.dir}"/>
            <arg value="stop"/>
            <classpath>

              <!-- This is to allow the use of -Dbuild.sysclasspath=only when
                   starting Ant - Meaning that all jars need to be on the
                   initial classpath -->
              <pathelement path="${java.class.path}"/>

              <!-- These are ignored if -Dbuild.sysclasspath=only is used -->
              <fileset dir="${home.tomcat.40}">
                  <include name="bin/bootstrap.jar"/>
              </fileset>
            </classpath>
        </java>

    </target>

    <!--
       ========================================================================
         Prepare directories and variables for running the tests
       ========================================================================
    -->
    <target name="prepare.tomcat.40"
        depends="init" if="home.tomcat.40">

        <echo message="home.tomcat.40 = ${home.tomcat.40}"/>

        <property name="target.tomcat40.dir"
            value="${target.test.dir}/tomcat40"/>
        <property name="conf.tomcat40.dir" value="${conf.test.dir}/tomcat40"/>

        <!-- Create work and conf directories and copy configuration files -->
        <mkdir dir="${target.tomcat40.dir}/conf"/>
        <mkdir dir="${target.tomcat40.dir}/work"/>
        <mkdir dir="${target.tomcat40.dir}/webapps"/>

        <!-- Delete some config file so that they will be copied every time -->
        <delete file="${target.tomcat40.dir}/conf/server.xml"/>

        <!-- Remove the auto deployed webapp so that it is redeployed every
             time -->
        <delete dir="${target.tomcat40.dir}/webapps/${context.path}"/>

        <copy todir="${target.tomcat40.dir}/conf" filtering="on">
            <fileset dir="${conf.tomcat40.dir}"/>
        </copy>

        <!-- Copy the Tomcat web.xml - We need to copy this file as it has
             changed between Tomcat 4.x versions and one version of it doesn't
             work with another version of Tomcat 4 -->
        <copy file="${home.tomcat.40}/conf/web.xml"
            todir="${target.tomcat40.dir}/conf"/>

        <!-- Copy the war file -->
        <copy file="${war.path}"
            tofile="${target.tomcat40.dir}/webapps/${context.path}.war"/>

    </target>
