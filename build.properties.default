# ========================================================================
# 
# Copyright 2001-2004 The Apache Software Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# ========================================================================

# -----------------------------------------------------------------------------
# build.properties.default
#
# This file contains the default values to configure the Cactus build system.
# You are expected to create a copy of this file named build.properties in 
# which you'll provide your customization for your local environment (such as
# defining which container to use for running the Cactus tests, etc).
#
# $Id$
# -----------------------------------------------------------------------------

# Note 1:  The relative paths below are relative to the directory where the
# build.xml file is located.

# Note 2: The libraries defined below can be automatically downloaded by
# typing "ant -f download.xml".

# -----------------------------------------------------------------------------
# Mandatory properties shared by several subprojects
# -----------------------------------------------------------------------------

# Location of the jar repository. This is where the jars are expected to be
# found. The default format is that of a Maven repository format. However you 
# can use any location and any format you wish, by tuning the default jar 
# locations at the bottom of this file.
lib.repo = ${user.home}/.maven/repository

# The location of the J2EE API jars. Depending on their versions the corresponding
# Cactus Framework will be built. For example if you use the J2EE 1.3 jars, then 
# the Cactus jar will contain the Filter Redirector which is only available for
# Servlet 2.3+ (part of J2EE 1.3+).
#
# Valid values are:
# - J2EE 1.2: j2ee.12.jar, servlet.22.jar, jsp.11.jar
# - J2EE 1.3: j2ee.13.jar, servlet.23.jar, jsp.12.jar
# - J2EE 1.4: j2ee.14.jar, servlet.24.jar, jsp.20.jar
#
# Note: If you're using J2EE 1.2, you won't be able to automatically download
# the jar file as it's only available through the Sun website and is not
# redistributable. You can download it manually here:
#   http://java.sun.com/j2ee/sdk_1.2.1/

# The J2EE API version to use
j2ee.jar = ${j2ee.13.jar}

# The Servlet API version to use
servlet.jar = ${servlet.23.jar}

# The Servlet API version to use
jsp.jar = ${jsp.12.jar}

# -----------------------------------------------------------------------------
# Mandatory properties for the Eclipse plugin only
# -----------------------------------------------------------------------------

# Do we build the Eclipse project as part of the master build? Uncomment
# to build Eclipse projects.
#eclipse.build = true

# Location of Eclipse.
#eclipse.home = D:/dev/eclipse-2.1

# Locations of Eclipse dependent plugin jars

# Example for Eclipse 2.1.2 - Windows platform
#eclipse.ant.core.jar = ${eclipse.home}/plugins/org.eclipse.ant.core_2.1.1/antsupport.jar
#eclipse.core.boot.jar = ${eclipse.home}/plugins/org.eclipse.core.boot_2.1.2/boot.jar
#eclipse.core.resources.jar = ${eclipse.home}/plugins/org.eclipse.core.resources_2.1.1/resources.jar
#eclipse.core.runtime.jar = ${eclipse.home}/plugins/org.eclipse.core.runtime_2.1.1/runtime.jar
#eclipse.debug.core.jar = ${eclipse.home}/plugins/org.eclipse.debug.core_2.1.2/dtcore.jar
#eclipse.debug.ui.jar = ${eclipse.home}/plugins/org.eclipse.debug.ui_2.1.1/dtui.jar
#eclipse.jdt.core.jar = ${eclipse.home}/plugins/org.eclipse.jdt.core_2.1.2/jdtcore.jar
#eclipse.jdt.junit.jar = ${eclipse.home}/plugins/org.eclipse.jdt.junit_2.1.1/junitsupport.jar
#eclipse.jdt.launching.jar = ${eclipse.home}/plugins/org.eclipse.jdt.launching_2.1.1/launching.jar
#eclipse.jdt.ui.jar = ${eclipse.home}/plugins/org.eclipse.jdt.ui_2.1.2/jdt.jar
#eclipse.jface.jar = ${eclipse.home}/plugins/org.eclipse.jface_2.1.1/jface.jar
#eclipse.swt.jar = ${eclipse.home}/plugins/org.eclipse.swt.win32_2.1.2/ws/win32/swt.jar
#eclipse.ui.externaltools.jar = ${eclipse.home}/plugins/org.eclipse.ui.externaltools_2.1.1/externaltools.jar
#eclipse.ui.workbench.jar = ${eclipse.home}/plugins/org.eclipse.ui.workbench_2.1.1/workbench.jar

# -----------------------------------------------------------------------------
# Optional properties share by several subprojects
# -----------------------------------------------------------------------------

# Should we instrument our code with Clover (test coverage tool)?
# For this to work, the clover.jar needs to be in ANTHOME/lib.
# Comment out to disable Clover (setting the property to false will have no
# effect).
#clover.enable = true

# -----------------------------------------------------------------------------
# Optional properties for the Servlet Sample subproject
# -----------------------------------------------------------------------------

# The port to use for starting the servers during unit testing. If not
# specified, it defaults to port 8080.
#cactus.port = 8081

# Servlet engine locations for the tests

# Note: If you don't want to run the test on a given servlet engine, just
#       comment it's home property. For example, if you don't want to run the
#       tests on Resin 2.x, comment the "cactus.home.resin2x" property.

#cactus.home.resin2x = c:/Apps/resin-2.1.14
#cactus.home.resin3x = c:/Apps/resin-3.0.9
#cactus.home.tomcat3x = c:/Apps/jakarta-tomcat-3.3.2
#cactus.home.tomcat4x = c:/Apps/jakarta-tomcat-4.1.31
#cactus.home.tomcat5x = c:/Apps/jakarta-tomcat-5.0.29
#cactus.home.orion1x = c:/Apps/orion-1.6.0b
#cactus.home.orion2x = c:/Apps/orion-2.0.4
#cactus.home.jboss3x = c:/Apps/jboss-3.2.6
#cactus.home.weblogic7x = c:/bea/weblogic700

# -----------------------------------------------------------------------------
# Optional properties for the Servlet Documentation subproject
# -----------------------------------------------------------------------------

# Decide whether or not to include the javadoc from the other subprojects in
# the web site. This is an option useful for reducing web site build time as
# javadoc do not need to be always updated. Uncomment to activate inclusion
# of javadoc.
#javadoc.include = true

# Properties needed to upload the documentation to the Cactus web site
#jakarta.username = vmassol
#scp = pscp
#ssh = tortoisePlink

# -----------------------------------------------------------------------------
# Optional properties for downloading the jar libraries
# -----------------------------------------------------------------------------

# If you're behind a firewall set the following properties
proxyhost = 
proxyuser = 
proxypassword =
proxyport = 80

# -----------------------------------------------------------------------------
# Properties that could be changed but you shouldn't bother touching. They 
# define the location of the jar libraries used by the build scripts. These 
# properties are also used by the download.xml Ant script to download the 
# corresponding jars and to put them in the locations defined below.
# -----------------------------------------------------------------------------

# List all available J2EE API versions. Note that it is required to list all
# versions if you wish to call "ant release" in jakarta-cactus. If you only
# wish to build a single Cactus project you only need to list the version you
# wish to use.
# Note: If you're using J2EE 1.2, you won't be able to automatically download
# the jar file as it's only available through the Sun website and is not
# redistributable. You'll need to manually download it (from 
# http://java.sun.com/j2ee/sdk_1.2.1/) and put in ${j2ee.12.jar}.
j2ee.12.jar = ${lib.repo}/j2ee/jars/j2ee-1.2.jar
j2ee.13.jar = ${lib.repo}/${j2ee.13.project}/jars/${j2ee.13.artifact}-${j2ee.13.version}.jar
j2ee.14.jar = ${lib.repo}/${j2ee.14.project}/jars/${j2ee.14.artifact}-${j2ee.14.version}.jar

# List all available Servlet versions. Note that it is required to list all
# versions if you wish to call "ant release" in jakarta-cactus. If you only
# wish to build a single Cactus project you only need to list the version you
# wish to use.
servlet.22.jar = ${lib.repo}/${servlet.22.project}/jars/${servlet.22.artifact}-${servlet.22.version}.jar
servlet.23.jar = ${lib.repo}/${servlet.23.project}/jars/${servlet.23.artifact}-${servlet.23.version}.jar
servlet.24.jar = ${lib.repo}/${servlet.24.project}/jars/${servlet.24.artifact}-${servlet.24.version}.jar

# List all available JSP versions. Note that it is required to list all
# versions if you wish to call "ant release" in jakarta-cactus. If you only
# wish to build a single Cactus project you only need to list the version you
# wish to use.
jsp.11.jar = ${servlet.22.jar}
jsp.12.jar = ${servlet.23.jar}
jsp.20.jar = ${lib.repo}/${jsp.20.project}/jars/${jsp.20.artifact}-${jsp.20.version}.jar

# The location of the Cargo jar
cargo.jar = ${lib.repo}/${cargo.project}/jars/${cargo.artifact}-${cargo.version}.jar

# The location of the Commons Logging jar
commons.logging.jar = ${lib.repo}/${commons.logging.project}/jars/${commons.logging.artifact}-${commons.logging.version}.jar

# The location of the log4j jar
log4j.jar = ${lib.repo}/${log4j.project}/jars/${log4j.artifact}-${log4j.version}.jar

# The location of the Commons Httpclient jar
commons.httpclient.jar = ${lib.repo}/${commons.httpclient.project}/jars/${commons.httpclient.artifact}-${commons.httpclient.version}.jar

# The location of the AspectJ runtime jar
aspectjrt.jar = ${lib.repo}/${aspectjrt.project}/jars/${aspectjrt.artifact}-${aspectjrt.version}.jar

# The location of the Junit jar
junit.jar = ${ant.home}/lib/${junit.artifact}-${junit.version}.jar

# The location of the MockObjects jar (needed for our unit tests)
mockobjects.jar = ${lib.repo}/${mockobjects.project}/jars/${mockobjects.artifact}-${mockobjects.version}.jar

# The location of the JSTL jar
jstl.jar = ${lib.repo}/${jstl.project}/jars/${jstl.artifact}-${jstl.version}.jar
 
# The location of the JSTL jar
standard.jar = ${lib.repo}/${standard.project}/jars/${standard.artifact}-${standard.version}.jar

# The location of the Httpunit jar
httpunit.jar = ${lib.repo}/${httpunit.project}/jars/${httpunit.artifact}-${httpunit.version}.jar

# The location of the Cargo jar
cargo.jar = ${lib.repo}/${cargo.project}/jars/${cargo.artifact}-${cargo.version}.jar

# Neko HTML (required by HttpUnit)
nekohtml.jar = ${lib.repo}/${nekohtml.project}/jars/${nekohtml.artifact}-${nekohtml.version}.jar

# Xerces (required by HttpUnit)
xerces.jar = ${lib.repo}/${xerces.project}/jars/${xerces.artifact}-${xerces.version}.jar

# XML Parsers API (required by HttpUnit)
xmlapis.jar = ${lib.repo}/${xmlapis.project}/jars/${xmlapis.artifact}-${xmlapis.version}.jar

# The location of the Jetty jar
jetty.jar = ${lib.repo}/${jetty.project}/jars/${jetty.artifact}-${jetty.version}.jar

# The location of the Jasper compiler jar (provided with Tomcat). Required for 
# the Jetty sample.
jasper-compiler.jar = ${lib.repo}/${jasper-compiler.project}/jars/${jasper-compiler.artifact}-${jasper-compiler.version}.jar

# The location of the Jasper runtime jar (provided with Tomcat). Required for 
# the Jetty sample.
jasper-runtime.jar = ${lib.repo}/${jasper-runtime.project}/jars/${jasper-runtime.artifact}-${jasper-runtime.version}.jar

# The location of the AspectJ tools jar.
aspectj-tools.jar = ${lib.repo}/${aspectj-tools.project}/jars/${aspectj-tools.artifact}-${aspectj-tools.version}.jar

# Dependencies for Checkstyle code auditing.
antlr.jar = ${lib.repo}/${antlr.project}/jars/${antlr.artifact}-${antlr.version}.jar
checkstyle.jar = ${lib.repo}/${checkstyle.project}/jars/${checkstyle.artifact}-${checkstyle.version}.jar
commons.beanutils.jar = ${lib.repo}/${commons.beanutils.project}/jars/${commons.beanutils.artifact}-${commons.beanutils.version}.jar
commons.collections.jar = ${lib.repo}/${commons.collections.project}/jars/${commons.collections.artifact}-${commons.collections.version}.jar
regexp.jar = ${lib.repo}/${regexp.project}/jars/${regexp.artifact}-${regexp.version}.jar

# Clover jar. This is required if clover is enabled (i.e. clover.enable is defined)
clover.jar = ${ant.home}/lib/${clover.artifact}-${clover.version}.jar
