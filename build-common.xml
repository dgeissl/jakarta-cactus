<!--
  =============================================================================
    Build file used by the different Cactus subprojects. It contains common
    Ant properties and common useful targets.
    
    The following properties need to be defined prior to include this scriptlet
    in your build script:
    
        base.dir    Base directory for all file related operations. Ex: 
                    "framework" for the Framework subproject
  =============================================================================
-->

    <!-- Give user a chance to override without editing this file
         (and without typing -D each time it compiles it) -->
    <property file="${basedir}/${base.dir}/build.properties" />
    <property file="${basedir}/build.properties" />
    <property file="${user.home}/build.properties" />
    
    <!-- Project version -->
    <property name="project.version" value="1.5dev"/>
    <property name="project.version.previous" value="1.4.1"/>

    <!-- Prefix to add to all distributable files -->
    <property name="project.prefix" value="jakarta"/>
   
    <!--
       ========================================================================
         Default values for properties not defined in build.properties or in
         a higher level calling Ant script
       ========================================================================
    -->
    <property name="year" value="2000-2003"/>
    <property name="debug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="deprecation" value="off"/>
   
    <!--
       ========================================================================
         Set the properties related to the target area
       ========================================================================
    -->
    <target name="init.properties.target.j2ee" if="j2ee.api">

        <property name="target.dir" value="${base.dir}/target-${j2ee.api}"/>

        <!-- Clover write data at compile time *and* at runtime in this file.
        	 Note: This property is required by Clover and represents the
        	 location of the Clover database. -->
        <property name="clover.initstring"
            value="${basedir}/target-${j2ee.api}/clover-coverage.db"/>

    </target>
    <target name="init.properties.target.noj2ee" unless="j2ee.api">
        <property name="target.dir" value="${base.dir}/target"/>
    </target>
    <target name="init.properties.target"
    	depends="init.properties.target.j2ee,init.properties.target.noj2ee">
    	
        <!-- Needed for the documentation project which needs to get the
        	 clover data for all the J2EE APIs -->
        <property name="clover.initstring.12"
            value="${basedir}/target-12/clover-coverage.db"/>
        <property name="clover.initstring.13"
            value="${basedir}/target-13/clover-coverage.db"/>

    </target>

    <!--
       ========================================================================
         Set the properties related to the dist area
       ========================================================================
    -->
    <target name="init.properties.dist.j2ee" if="j2ee.api">
        <property name="dist.dir" value="${base.dir}/dist-${j2ee.api}"/>
    </target>
    <target name="init.properties.dist.noj2ee" unless="j2ee.api">
        <property name="dist.dir" value="${base.dir}/dist"/>
    </target>
    <target name="init.properties.dist"
    	depends="init.properties.dist.j2ee,init.properties.dist.noj2ee">
    	
        <property name="dist.lib.dir" value="${dist.dir}/lib"/>
        <property name="dist.bin.dir" value="${dist.dir}/bin"/>
        <property name="dist.doc.dir" value="${dist.dir}/doc"/>
        <property name="dist.doc.api.dir" value="${dist.doc.dir}/api"/>
        <property name="dist.web.dir" value="${dist.dir}/web"/>

    </target>

    <!--
       ========================================================================
         Set the properties related to the produced artifacts
       ========================================================================
    -->
    <target name="init.properties.artifact">

        <!-- The location of the Cactus Ant tasks jar -->
        <property name="cactus.anttasks.jar.name" value="cactus-anttasks"/>
        <property name="cactus.anttasks.jar"
            location="anttasks/dist/lib/${cactus.anttasks.jar.name}.jar"/>

	    <!-- The location of the Cactus framework jar -->
        <property name="cactus.framework.jar.name" value="cactus-framework"/>
        <property name="cactus.framework.jar"
            value="framework/dist-${j2ee.api}/lib/${cactus.framework.jar.name}.jar"/>

        <!-- The location of the Clover(ed) Cactus framework jar -->
        <property name="cactus.framework.clover.jar.name"
            value="${cactus.framework.jar.name}-clover"/>
        <property name="cactus.framework.clover.jar"
            value="framework/dist-${j2ee.api}/lib/${cactus.framework.clover.jar.name}.jar"/>

	    <!-- The location of the web files generated by the Cactus framework
	         (i.e. the JSP Redirector) -->
	    <property name="cactus.framework.web" 
	    	value="framework/dist-${j2ee.api}/web"/>

        <!-- The Ant Integration jar and helper classes -->
        <property name="cactus.antintegration.jar.name" value="cactus-integration-ant"/>
        <property name="cactus.antintegration.jar" 
            value="integration/ant/dist-${j2ee.api}/lib/${cactus.antintegration.jar.name}.jar"/>
        <property name="cactus.antintegration.bin" 
            value="integration/ant/dist-${j2ee.api}/bin/${cactus.antintegration.jar.name}"/>

        <!-- The Cactus Eclipse Runner Integration dist -->
        <property name="cactus.eclipse.runner.bin" value="integration/eclipse/org.apache.cactus.eclipse.runner/dist-${j2ee.api}/bin/cactus-integration-eclipse-runner"/>
        
        <!-- The Cactus Eclipse Webapp Integration dist -->
        <property name="cactus.eclipse.webapp.bin" value="integration/eclipse/org.apache.cactus.eclipse.webapp/dist/bin/cactus-integration-eclipse-webapp"/>
        
         <!-- The Sample Servlet dist -->
        <property name="cactus.samples.servlet.bin" value="samples/servlet/dist-${j2ee.api}/bin/cactus-sample-servlet"/>


    </target>

    <!--
       ========================================================================
         Set the properties related to the release area
       ========================================================================
    -->
    <target name="init.properties.release.j2ee" if="j2ee.api">
        <property name="release.dir" value="${base.dir}/release-${j2ee.api}"/>
        <property name="main.release.name" 
            value="${project.prefix}-${project.name.file}-${j2ee.api}-${project.version}"/>
    </target>
    <target name="init.properties.release.noj2ee" unless="j2ee.api">
        <property name="release.dir" value="${base.dir}/release"/>
        <property name="main.release.name" 
            value="${project.prefix}-${project.name.file}-${project.version}"/>
    </target>
    <target name="init.properties.release"
    	depends="init.properties.release.j2ee,init.properties.release.noj2ee"/>   	

    <!--
       ========================================================================
         Display configurable properties values
       ========================================================================
    -->
    <target name="init.display">

        <echo>----- ${project.name.text} ${project.version} -----</echo>
        <echo></echo>
        <echo>java.class.path = ${java.class.path}"</echo>
        <echo></echo>
        <echo>java.home = ${java.home}</echo>
        <echo>user.home = ${user.home}</echo>
        <echo>ant.home = ${ant.home}</echo>
        <echo></echo>

    </target>

    <!--
       ========================================================================
         Decide if the current project being built depends on the J2EE API
         version or not.
       ========================================================================
    -->
    <target name="init.j2ee.dependent">

        <condition property="j2ee.dependent" value="true">
            <or>
                <equals arg1="${base.dir}" arg2="framework"/>
                <equals arg1="${base.dir}" arg2="samples/servlet"/>
                <equals arg1="${base.dir}" arg2="samples/jetty"/>
                <equals arg1="${base.dir}" arg2="integration/ant"/>
                <equals arg1="${base.dir}" arg2="integration/eclipse/org.apache.cactus.eclipse.runner"/>
                <equals arg1="${base.dir}" arg2="integration/eclipse/org.apache.cactus.eclipse.site"/>                
            </or>
        </condition>

    </target>
    
    <!--
       ========================================================================
         Find out the J2EE API version
       ========================================================================
    -->
    <target name="init.j2ee.find" if="j2ee.dependent">

        <condition property="j2ee.api" value="13">
            <available classname="javax.servlet.Filter">
                <classpath>
                   <pathelement location="${j2ee.jar}"/>
                </classpath>
            </available>
        </condition>

        <condition property="j2ee.api" value="12">
            <available classname="javax.servlet.Servlet">
                <classpath>
                   <pathelement location="${j2ee.jar}"/>
                </classpath>
            </available>
        </condition>

        <fail message="Unsupported J2EE version or invalid J2EE jar [${j2ee.jar}]" 
            unless="j2ee.api"/>

        <echo message="j2ee.api = ${j2ee.api}"/>

    </target>

    <!--
       ========================================================================
         Set J2EE related properties 
       ========================================================================
    -->
    <target name="init.j2ee" depends="init.j2ee.dependent,init.j2ee.find"/>

    <!--
       ========================================================================
         Load all properties
       ========================================================================
    -->
    <target name="init.properties"
    	depends="init.j2ee,init.properties.target,init.properties.dist,
    	init.properties.release,init.properties.artifact"/>

    <!--
       ========================================================================
         Initialize the build. Must be called by all targets
       ========================================================================
    -->
    <target name="init.common" depends="init.display,init.properties">

        <tstamp/>

        <condition property="offline">
          <or>
            <isset property="offline"/>
            <not>
              <http url="http://jakarta.apache.org/"/>
            </not>
          </or>
        </condition>

        <!-- Filters -->
        <filter token="version" value="${project.version}"/>
        <filter token="year" value="${year}"/>
        <filter token="today" value="${TODAY}"/>

    </target>

    <!--
       ========================================================================
         Initialize Checkstyle.
       ========================================================================
    -->
    <target name="init.checkstyle.check">

        <path id="checkstyle.classpath">
            <pathelement location="${antlr.jar}"/>
            <pathelement location="${checkstyle.jar}"/>
            <pathelement location="${commons.beanutils.jar}"/>
            <pathelement location="${commons.collections.jar}"/>
            <pathelement location="${commons.logging.jar}"/>
            <pathelement location="${regexp.jar}"/>
            <!-- Includes system classpath for jars that are in ANT_HOME/lib 
                 such as aspectrt.jar, etc -->
            <pathelement path="${java.class.path}"/>
        </path>

        <condition property="checkstyle.available">
            <and>
                <available
                    classname="antlr.Parser"
                    classpathref="checkstyle.classpath"/>
                <available
                    classname="org.apache.commons.collections.CollectionUtils"
                    classpathref="checkstyle.classpath"/>
                <available
                    classname="org.apache.commons.logging.Log"
                    classpathref="checkstyle.classpath"/>
                <available
                    classname="org.apache.commons.beanutils.BeanUtils"
                    classpathref="checkstyle.classpath"/>
                <available
                    classname="org.apache.regexp.RE"
                    classpathref="checkstyle.classpath"/>
                <available
                    classname="com.puppycrawl.tools.checkstyle.CheckStyleTask"
                    classpathref="checkstyle.classpath"/>
            </and>
        </condition>

    </target>

    <target name="init.checkstyle"
        depends="init.checkstyle.check"
        if="checkstyle.available">

        <taskdef resource="checkstyletask.properties"
            classpathref="checkstyle.classpath"/>

    </target>

    <!--
       ========================================================================
         Clean generated files (including distributables)
       ========================================================================
    -->
    <target name="clean" depends="init.display,init.properties"
    	description="Clean all generated files">

        <delete dir="${target.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${release.dir}"/>

    </target>
