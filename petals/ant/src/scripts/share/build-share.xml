
    <!-- Global properties -->
    
    <!-- Default port on which to start the containers -->
    <property name="cactus.port" value="8080"/>

    <!-- Tmp dir used by Cactus for its operations -->
    <property name="cactus.target.dir" value="target"/>

    <!-- Default Cactus test files to include in the test -->
    <property name="cactus.src.includes" value="**/*Test*.java"/>

    <!-- Default Cactus test files to exclude from the test -->
    <property name="cactus.src.excludes" value="**/AllTests.java"/>

    <!-- Default Java VM to use for java Ant tasks -->
    <property name="cactus.jvm" value="java"/>
    
    <!-- Default webapp context -->
    <property name="cactus.context" value="cactustest"/>
    
    <!--
       ========================================================================
         Set the properties related to the source tree.
       ========================================================================
    -->
    <property name="cactus.conf.dir" value="confs"/>
    <property name="cactus.lib.dir" value="lib"/>
    <property name="cactus.lib.client.dir" value="${cactus.lib.dir}/client"/>
    <property name="cactus.lib.server.dir" value="${cactus.lib.dir}/server"/>
    <property name="cactus.lib.common.dir" value="${cactus.lib.dir}/common"/>
    <property name="cactus.script.dir" value="scripts"/>

    <property name="cactus.target.classes.dir" value="${cactus.target.dir}/classes"/>

    <!-- Cactus related jar locations -->
    <property name="cactus.petal.ant.jar" 
        value="${cactus.lib.client.dir}/@cactus.petal.ant.jar.name@"/>

    <property name="cactus.framework.jar" 
        value="${cactus.lib.common.dir}/@cactus.framework.jar.name@"/>
    <property name="cactus.log4j.jar" 
        value="${cactus.lib.common.dir}/@log4j.jar.name@"/>
    <property name="cactus.aspectjrt.jar" 
        value="${cactus.lib.common.dir}/@aspectjrt.jar.name@"/>
    <property name="cactus.commons.logging.jar" 
        value="${cactus.lib.common.dir}/@commons.logging.jar.name@"/>
    <property name="cactus.junit.jar" 
        value="${cactus.lib.common.dir}/@junit.jar.name@"/>

    <property name="cactus.commons.httpclient.jar" 
        value="${cactus.lib.client.dir}/@commons.httpclient.jar.name@"/>
    <property name="cactus.httpunit.jar" 
        value="${cactus.lib.client.dir}/@httpunit.jar.name@"/>

    <!--
       ========================================================================
         Initialize the build. Must be called by all targets
       ========================================================================
    -->
    <target name="cactus.init">

        <!-- Filters -->
        <filter token="cactus.port" value="${cactus.port}"/>
        <filter token="cactus.context" value="${cactus.context}"/>

        <!-- Initialize Cactus custom Ant task needed for running the server
             tests -->
        <taskdef name="runservertests"
            classname="org.apache.cactus.petal.ant.RunServerTestsTask">
            <classpath>
                <pathelement location="${cactus.petal.ant.jar}"/>
            </classpath>
        </taskdef>

    </target>

    <!--
       ========================================================================
         Compile the Cactus tests.
       ========================================================================
    -->
    <target name="cactus.compile" if="cactus.src.dir" description="Compile the Cactus tests">

        <mkdir dir="${cactus.target.classes.dir}"/>

        <javac destdir="${cactus.target.classes.dir}" srcdir="${cactus.src.dir}">
            <classpath>
                <pathelement location="${cactus.framework.jar}"/>
                <pathelement location="${cactus.log4j.jar}"/>
                <pathelement location="${cactus.aspectjrt.jar}"/>
                <pathelement location="${cactus.commons.logging.jar}"/>
                <pathelement location="${cactus.junit.jar}"/>
                <pathelement location="${cactus.commons.httpclient.jar}"/>
                <pathelement location="${cactus.httpunit.jar}"/>
                <path refid="cactus.classpath"/>
            </classpath>
        </javac>

        <!-- Copy non-java files -->
        <copy todir="${cactus.target.classes.dir}">
            <fileset dir="${cactus.src.dir}">
                <exclude name="**/*.java"/>
                <exclude name="**/*.html"/>
            </fileset>
        </copy>
        
    </target>
    
    <!--
       ========================================================================
         Cactifify a plain war (pointed to by the cactus.war property).
       ========================================================================
    -->
    <target name="cactus.war" depends="cactus.compile" 
        description="Cactify the war">
                
        <unwar src="${cactus.war}" 
            dest="${cactus.target.dir}/${cactus.context}"/>

        <!-- TODO: Perform a web.xml merge -->

        <!-- Copy the Cactus web.xml -->
        <copy todir="${cactus.target.dir}/${cactus.context}/WEB-INF">
            <fileset dir="${cactus.conf.dir}">
                <include name="web.xml"/>
            </fileset>
        </copy>

        <!-- Copy the Cactus test classes -->
        <copy todir="${cactus.target.dir}/${cactus.context}/WEB-INF/classes">
            <fileset dir="${cactus.target.classes.dir}"/>
        </copy>
                
        <!-- Copy the Cactus jars -->
        <copy todir="${cactus.target.dir}/${cactus.context}/WEB-INF/lib">
            <fileset dir="${cactus.lib.server.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${cactus.lib.common.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <!-- Copy the JSP Redirector -->
        <copy todir="${cactus.target.dir}/${cactus.context}">
            <fileset dir="${cactus.conf.dir}">
                <include name="jspRedirector.jsp"/>
            </fileset>          
        </copy>
                    
    </target>
   
    <!--
       ========================================================================
         Trigger the Cactus test by running a JUnit Test Runner
       ========================================================================
    -->
    <target name="cactus.test">

        <junit printsummary="yes" haltonfailure="yes" haltonerror="yes"
            fork="yes">

            <jvmarg value="-Dcactus.contextURL=http://localhost:${cactus.port}/${cactus.context}"/>
            
            <classpath>
                <pathelement location="${cactus.target.classes.dir}"/>
                <pathelement location="${cactus.framework.jar}"/>
                <pathelement location="${cactus.log4j.jar}"/>
                <pathelement location="${cactus.aspectjrt.jar}"/>
                <pathelement location="${cactus.commons.logging.jar}"/>
                <pathelement location="${cactus.junit.jar}"/>
                <pathelement location="${cactus.commons.httpclient.jar}"/>
                <pathelement location="${cactus.httpunit.jar}"/>
                <path refid="cactus.classpath"/>
            </classpath>

            <formatter type="plain" usefile="false"/>

            <!-- TODO: Automatically discover Cactus tests -->

            <batchtest>
                <fileset dir="${cactus.src.dir}" 
                    includes="${cactus.src.includes}" 
                    excludes="${cactus.src.excludes}"/>
            </batchtest>

        </junit>

    </target>
       