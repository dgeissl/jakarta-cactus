# -----------------------------------------------------------------------------
# build.properties
#
# Use this file to ajust the build of the Cactus Servlet Sample to your local
# environment. Specifically, you will want to define the installation
# directory of any container you want to test against in this file, or the
# port on which the containers will be started.
#
# $Id$
# -----------------------------------------------------------------------------

# WARNING:  The relative paths below are relative to the directory where the
# build.xml file is located.

# -----------------------------------------------------------------------------
# Mandatory properties
# -----------------------------------------------------------------------------

# The location of the Servlet API 2.2 jar
servlet.jar = ../../lib/@servlet.jar.name@

# -----------------------------------------------------------------------------
# Optional properties
# -----------------------------------------------------------------------------

# The port to use for starting the servers during unit testing. If not
# specified, it defaults to port 8080.
#cactus.port = 8081

# Servlet engine locations for the tests

# Note: If you don't want to run the test on a given servlet engine, just
#       comment it's home property. For example, if you don't want to run the
#       tests on the Resin 2.x, comment the "cactus.home.resin2x" property.

#cactus.home.resin2x = c:/Apps/resin-2.1.10
#cactus.home.tomcat3x = c:/Apps/jakarta-tomcat-3.3.1a
#cactus.home.tomcat4x = c:/Apps/jakarta-tomcat-4.1.24
#cactus.home.tomcat5x = c:/Apps/jakarta-tomcat-5.0.3
#cactus.home.orion1x = c:/Apps/orion-1.6.0
#cactus.home.orion2x = c:/Apps/orion-2.0.2
#cactus.home.weblogic7x = c:/bea/weblogic700

# -----------------------------------------------------------------------------
# Logging properties
# -----------------------------------------------------------------------------

# Disable logging by default when running the tests. If you wish to use a 
# logging subsystem, uncomment the line below. That will let Commons logging
# decide automatically of a suitable logging system for you. For more info, see
# http://jakarta.apache.org/commons/logging/api/org/apache/commons/logging/package-summary.html#package_description
org.apache.commons.logging.Log=org.apache.commons.logging.impl.NoOpLog

# ---- JDK 1.4 logging properties

# Following properties are useful if you're using the JDK 1.4 logging subsystem
# and wish to output logs to the console. Comment the NoOpLog line above and
# uncommment the following lines as needed.
java.util.logging.config.file=${basedir}/build.properties
handlers= java.util.logging.FileHandler,java.util.logging.ConsoleHandler
java.util.logging.ConsoleHandler.level = FINEST
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.pattern = test%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# If you want to provide finer grained logging, restrict the level for the 
# specific package name. 
# For example: org.apache.cactus.server.level = FINEST
org.apache.cactus.level = FINEST
