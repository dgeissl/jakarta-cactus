<?xml version="1.0"?>
<!DOCTYPE project [
    <!ENTITY common SYSTEM "file:../build-common.xml">
]>

<!--
  =============================================================================
    Build file for the Cactus Ant tasks.

    See build.properties.sample for mandatory and optional Ant properties that
    need to be set prior to calling this build script.

    This script should be started with the following command line :

        ant <target>

    Run "ant -projecthelp" to get a list of available targets.

    Note: basedir points to the main Cactus directory in order to have the same
          base dir for all Cactus subprojects and thus be able to share
          relative paths.
  =============================================================================
-->
<project name="Cactus Ant Tasks" default="dist" basedir="..">

    <!-- Base directory for all file related operations -->
    <property name="base.dir" value="anttasks"/>

    <!-- Include properties and targets common to the different subprojects -->
    &common;

    <!-- Global project properties -->
    <property name="project.name.text" value="Cactus Ant tasks"/>
    <property name="project.name.file" value="cactus-anttasks"/>

    <!--
       ========================================================================
         Initialize source, target and dist properties
       ========================================================================
    -->
    <target name="properties">

        <!-- Set the properties related to the source tree -->
        <property name="src.dir" value="${base.dir}/src"/>
        <property name="src.java.dir" value="${src.dir}/java"/>
        <property name="build.dir" value="${base.dir}/."/>

        <!-- Set the properties related to the target area -->
        <property name="target.classes.dir" value="${target.dir}/classes"/>
        <property name="target.classes.java.dir"
            value="${target.classes.dir}/java"/>
        <property name="target.doc.dir" value="${target.dir}/doc"/>
        <property name="target.doc.api.dir" value="${target.doc.dir}/api"/>

    </target>
        
    <!--
       ========================================================================
         Initialize the build. Must be called by all targets
       ========================================================================
    -->
    <target name="init" depends="init.common,properties">
    </target>

    <!--
       ========================================================================
         Compiles the sources
       ========================================================================
    -->
    <target name="compile" depends="init" description="Compile the sources">

        <mkdir dir="${target.classes.java.dir}"/>

        <javac srcdir="${src.java.dir}" destdir="${target.classes.java.dir}"
          deprecation="${deprecation}" optimize="${optimize}" 
          debug="${debug}"/>

    </target>

    <!--
       ========================================================================
         Create the runtime jar file
       ========================================================================
    -->
    <target name="jar" depends="compile" description="Generate the library jar">

        <jar jarfile="${target.dir}/${cactus.anttasks.jar.name}.jar">

            <manifest>
                <section name="org/apache/cactus/ant/">
                    <attribute name="Specification-Title"
                        value="${project.name.text}"/>
                    <attribute name="Specification-Version"
                        value="${project.version}"/>
                    <attribute name="Specification-Vendor"
                        value="Apache Software Foundation"/>
                    <attribute name="Implementation-Title"
                        value="${project.name.file}"/>
                    <attribute name="Implementation-Version"
                        value="${project.version} ${TODAY}"/>
                    <attribute name="Implementation-Vendor"
                        value="Apache Software Foundation"/>
                </section>
            </manifest>

            <metainf dir=".">
                <include name="LICENSE.cactus"/>
            </metainf>
            <fileset dir="${target.classes.java.dir}"/>
        </jar>

    </target>

    <!--
       ========================================================================
         Generate the documentation (javadoc)
       ========================================================================
    -->
    <target name="doc.check"
        depends="init">

      <uptodate property="doc.uptodate"
          targetfile="${target.doc.api.dir}/index.html">
          <srcfiles dir="${src.java.dir}"
              includes="**/*.java, **/*.html"/>
      </uptodate>

    </target>

    <target name="doc" depends="doc.check" unless="doc.uptodate"
        description="Generates the API documentation">

        <mkdir dir="${target.doc.api.dir}"/>

        <javadoc
            sourcepath="${src.java.dir}"
            packagenames="org.apache.cactus.ant.*"
            destdir="${target.doc.api.dir}"
            author="true"
            public="true"
            version="true"
            use="true"
            windowtitle="${project.name.text} ${project.version}"
            doctitle="${project.name.text} ${project.version}"
            bottom="Copyright &amp;copy; ${year} Apache Software Foundation.
                    All Rights Reserved.">
        </javadoc>

    </target>

    <!--
       ========================================================================
         Generate the artifacts
       ========================================================================
    -->
    <target name="dist" depends="jar,doc,checkstyle"
        description="Generate the project artifacts">

        <mkdir dir="${dist.lib.dir}"/>
        <mkdir dir="${dist.doc.api.dir}"/>

        <copy todir="${dist.lib.dir}"
            file="${target.dir}/${cactus.anttasks.jar.name}.jar"/>
        <copy todir="${dist.doc.api.dir}">
            <fileset dir="${target.doc.api.dir}"/>
        </copy>

    </target>

    <!--
       ========================================================================
         Perform a code audit using CheckStyle.
       ========================================================================
    -->
    <target name="checkstyle" depends="init,init.checkstyle" 
        if="checkstyle.available"
        description="Perform a code audit using Checkstyle">

        <mkdir dir="${target.dir}"/>

        <checkstyle config="./checkstyle.xml" 
            failOnViolation="true">

            <fileset dir="${src.java.dir}">
                <include name="**/*.java"/>
            </fileset>
        
            <formatter type="plain"/>
            <formatter type="xml"
                toFile="${target.dir}/checkstyle_results.xml"/>

            <property key="checkstyle.header.file" file="./LICENSE.cactus"/>
        </checkstyle>

    </target>

    <!--
       ========================================================================
         Generate the release
       ========================================================================
    -->
    <target name="release" depends="clean,dist"
        description="Generate the release files">

        <mkdir dir="${release.dir}"/>

        <zip destfile="${release.dir}/${main.release.name}.zip">
            <zipfileset dir="${dist.dir}" prefix="${main.release.name}"/>
        </zip>
        
    </target>

</project>
